; File: examples/fol/raft.pyv

; Sig
(sort index)
(sort log)
(sort node)
(sort option_index)
(sort option_term)
(sort quorum)
(sort term)
(sort value)
(constant commit_index index)
(constant commit_log log)
(constant commit_quorum quorum)
(constant commit_term term)
(constant commit_value value)
(constant index_zero index)
(constant log0 log)
(constant none_index option_index)
(constant none_term option_term)
(constant term_zero term)
(relation append_msg term option_index option_term index term value)
(relation append_reply_msg node term index term)
(relation committed index value)
(relation current_term node term)
(relation index_le index index)
(relation index_used log index)
(relation is_none_index option_index)
(relation is_none_term option_term)
(relation leader node term)
(relation left_term node term)
(relation member node quorum)
(relation request_vote_msg node term option_index option_term)
(relation started term)
(relation term_at log index term)
(relation term_le term term)
(relation valid log)
(relation vote_msg node term node)
(relation voted node term)
(function current_log node log)
(function oi_index option_index index)
(function ot_term option_term term)
(function term_leader term node)
(function term_log term log)
(function value_at log index value)
(function voting_quorum term quorum)
; End sig

; Axioms
(axiom (forall T term (term_le T T)))
(axiom (forall T1 term (forall T2 term (forall T3 term (or (not (and (term_le T1 T2) (term_le T2 T3))) (term_le T1 T3))))))
(axiom (forall T1 term (forall T2 term (or (not (and (term_le T1 T2) (term_le T2 T1))) (= T1 T2)))))
(axiom (forall T1 term (forall T2 term (or (term_le T1 T2) (term_le T2 T1)))))
(axiom (forall T term (term_le term_zero T)))
(axiom (forall T index (index_le T T)))
(axiom (forall T1 index (forall T2 index (forall T3 index (or (not (and (index_le T1 T2) (index_le T2 T3))) (index_le T1 T3))))))
(axiom (forall T1 index (forall T2 index (or (not (and (index_le T1 T2) (index_le T2 T1))) (= T1 T2)))))
(axiom (forall T1 index (forall T2 index (or (index_le T1 T2) (index_le T2 T1)))))
(axiom (forall T index (index_le index_zero T)))
(axiom (forall Q1 quorum (forall Q2 quorum (exists N node (and (member N Q1) (member N Q2))))))
(axiom (forall OI option_index (or (and (not (is_none_index OI)) (not (= OI none_index))) (and (= OI none_index) (is_none_index OI)))))
(axiom (forall OT option_term (or (and (not (is_none_term OT)) (not (= OT none_term))) (and (= OT none_term) (is_none_term OT)))))
(axiom (forall L log (forall I index (forall T1 term (forall T2 term (or (not (and (term_at L I T1) (term_at L I T2))) (= T1 T2)))))))
(axiom (forall I index (not (index_used log0 I))))
(axiom (forall I index (forall T term (not (term_at log0 I T)))))

; Conjecture leader_term_log
(conjecture (forall N node (forall T term (or (not (and (leader N T) (current_term N T))) (= (current_log N) (term_log T))))))