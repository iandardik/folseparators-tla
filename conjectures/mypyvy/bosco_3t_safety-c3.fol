; File: examples/fol/bosco_3t_safety.pyv

; Sig
(sort node)
(sort quorum_a)
(sort quorum_b)
(sort quorum_c)
(sort value)
(relation dec node value)
(relation done node)
(relation input node value)
(relation member_a node quorum_a)
(relation member_b node quorum_b)
(relation member_c node quorum_c)
(relation member_f node)
(relation rcv_msg node node value)
(relation rcv_msg_proj node node)
(relation sent_msg node node value)
(relation sent_msg_proj node node)
(relation und_cons node value)
(relation und_cons_dec value)
; End sig

; Axioms
(axiom (forall A quorum_a (forall B quorum_b (exists C quorum_c (forall N node (or (not (member_c N C)) (and (member_a N A) (member_b N B) (not (member_f N)))))))))
(axiom (forall B quorum_b (forall C quorum_c (exists N node (and (member_b N B) (member_c N C) (not (member_f N)))))))
(axiom (forall N node (forall V1 value (forall V2 value (or (not (and (not (member_f N)) (input N V1) (input N V2))) (= V1 V2))))))

; Conjecture c3
(conjecture (forall N1 node (forall N2 node (forall V value (or (not (not (member_f N1))) (or (and (not (sent_msg N1 N2 V)) (not (input N1 V))) (and (input N1 V) (sent_msg N1 N2 V))))))))