; File: good-ivy-examples/misc/chord-1s-nofail-liveness-epr.ivy

; Sig
(sort chord.node)
(relation chord.bs.f chord.node chord.node)
(relation chord.bs.p chord.node chord.node chord.node)
(relation chord.live chord.node)
(relation chord.prd chord.node chord.node)
(relation chord.prd_proj chord.node)
(relation chord.ring.btw chord.node chord.node chord.node)
(relation chord.scheduled_rectify chord.node chord.node)
(relation chord.scheduled_stabilize chord.node chord.node)
(relation chord.stable )
(relation chord.started )
(constant chord.tp1.n0 chord.node)
; End sig

; Axiom chord_ring_cyclic
(axiom (forall Y chord.node (forall Z chord.node (forall X chord.node (or (not (chord.ring.btw X Y Z)) (chord.ring.btw Y Z X))))))
; Axiom chord_ring_transitive
(axiom (forall Y chord.node (forall W chord.node (forall Z chord.node (forall X chord.node (or (not (and (chord.ring.btw W X Y) (chord.ring.btw W Y Z))) (chord.ring.btw W X Z)))))))
; Axiom chord_ring_antisimmeric
(axiom (forall Y chord.node (forall Z chord.node (forall X chord.node (or (not (chord.ring.btw X Y Z)) (not (chord.ring.btw X Z Y)))))))
; Axiom chord_ring_total
(axiom (forall Y chord.node (forall Z chord.node (forall X chord.node (or (or (or (or (chord.ring.btw X Y Z) (chord.ring.btw X Z Y)) (= X Y)) (= X Z)) (= Y Z))))))
; Axiom chord_bs
(axiom (forall Y chord.node (forall W chord.node (forall Z chord.node (forall X chord.node (or (not (and (chord.bs.p W X Y) (chord.bs.p W Y Z))) (chord.bs.p W X Z)))))))
; Axiom chord_bs0
(axiom (forall Y chord.node (forall W chord.node (forall X chord.node (or (not (and (chord.bs.p W X Y) (chord.bs.p W Y X))) (= X Y))))))
; Axiom chord_bs1
(axiom (forall Y chord.node (forall W chord.node (forall X chord.node (or (not (and (chord.bs.p W X X) (chord.bs.p W Y Y))) (or (chord.bs.p W X Y) (chord.bs.p W Y X)))))))
; Axiom chord_bs2
(axiom (forall Y chord.node (forall W chord.node (forall X chord.node (or (not (chord.bs.p W X Y)) (and (chord.bs.p W X X) (chord.bs.p W Y Y)))))))
; Axiom chord_bs3
(axiom (forall Y chord.node (forall X chord.node (or (not (chord.bs.p X X Y)) (= X Y)))))
; Axiom chord_bs4
(axiom (forall Y chord.node (forall Z chord.node (forall X chord.node (or (not (and (chord.bs.p X Y Y) (chord.bs.p Y Z Z))) (chord.bs.p X Z Z))))))
; Axiom chord_bs5
(axiom (forall Y chord.node (forall W chord.node (forall Z chord.node (forall X chord.node (or (not (and (and (chord.bs.p X Y Z) (chord.bs.p X Z W)) (not (= Y Z)))) (chord.bs.p Y Z W)))))))
; Axiom chord_bs6
(axiom (forall Y chord.node (forall Z chord.node (forall X chord.node (or (not (chord.bs.f X Y)) (and (chord.bs.p X Y Y) (or (not (chord.bs.p X Z Z)) (chord.bs.p X Y Z))))))))


; Conjecture chord_at_least_one_ring
(conjecture (or (not (chord.started)) (exists N chord.node (chord.bs.p N N N))))
