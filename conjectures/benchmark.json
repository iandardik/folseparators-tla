[
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp",
  "file": "conjectures/extracted/alternating_bit_protocol-abp.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall I:abp.index_t. (~(abp.receiver_array(I) ~= abp.bot) | abp.receiver_array(I) = abp.sender_array(I))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp0",
  "file": "conjectures/extracted/alternating_bit_protocol-abp0.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall I:abp.index_t. ((abp.index.le(abp.sender_gen_i, I) & abp.sender_array(I) = abp.bot) | (~abp.index.le(abp.sender_gen_i, I) & abp.sender_array(I) ~= abp.bot))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp1",
  "file": "conjectures/extracted/alternating_bit_protocol-abp1.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall I:abp.index_t. ((abp.index.le(abp.receiver_i, I) & abp.receiver_array(I) = abp.bot) | (~abp.index.le(abp.receiver_i, I) & abp.receiver_array(I) ~= abp.bot))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp10",
  "file": "conjectures/extracted/alternating_bit_protocol-abp10.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall A2:abp.ack_msg_t. forall A1:abp.ack_msg_t. (~(((abp.sender_bit() & ~abp.receiver_bit()) & abp.ack_msg.le(A1, A2))) | ~((~abp.abit(A1) & abp.abit(A2))))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp11",
  "file": "conjectures/extracted/alternating_bit_protocol-abp11.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~(((abp.sender_bit() & abp.receiver_bit()) | (~abp.sender_bit() & ~abp.receiver_bit()))) | abp.sender_i = abp.receiver_i)"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp12",
  "file": "conjectures/extracted/alternating_bit_protocol-abp12.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~(((abp.sender_bit() & ~abp.receiver_bit()) | (~abp.sender_bit() & ~(~abp.receiver_bit())))) | (~abp.index.le(abp.receiver_i, abp.sender_i) & forall I:abp.index_t. (~(~abp.index.le(I, abp.sender_i)) | abp.index.le(abp.receiver_i, I))))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp13",
  "file": "conjectures/extracted/alternating_bit_protocol-abp13.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall M:abp.data_msg_t. (~((abp.data_msg.le(M, M) & ((abp.dbit(M) & abp.sender_bit()) | (~abp.dbit(M) & ~abp.sender_bit())))) | ~abp.index.le(abp.sender_gen_i, abp.sender_i))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp14",
  "file": "conjectures/extracted/alternating_bit_protocol-abp14.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall M:abp.data_msg_t. (~((abp.data_msg.le(M, M) & ((abp.dbit(M) & abp.sender_bit()) | (~abp.dbit(M) & ~abp.sender_bit())))) | abp.d(M) = abp.sender_array(abp.sender_i))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp15",
  "file": "conjectures/extracted/alternating_bit_protocol-abp15.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall M:abp.data_msg_t. (~abp.data_msg.le(M, M) | abp.d(M) ~= abp.bot)"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp16",
  "file": "conjectures/extracted/alternating_bit_protocol-abp16.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall A:abp.ack_msg_t. (~((abp.ack_msg.le(A, A) & ((abp.abit(A) & abp.sender_bit()) | (~abp.abit(A) & ~abp.sender_bit())))) | ~abp.index.le(abp.receiver_i, abp.sender_i))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp17",
  "file": "conjectures/extracted/alternating_bit_protocol-abp17.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall A:abp.ack_msg_t. (~((abp.ack_msg.le(A, A) & ((abp.abit(A) & abp.sender_bit()) | (~abp.abit(A) & ~abp.sender_bit())))) | abp.receiver_array(abp.sender_i) = abp.sender_array(abp.sender_i))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp18",
  "file": "conjectures/extracted/alternating_bit_protocol-abp18.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall A:abp.ack_msg_t. (~((abp.ack_msg.le(A, A) & ((abp.abit(A) & abp.sender_bit()) | (~abp.abit(A) & ~abp.sender_bit())))) | abp.receiver_array(abp.sender_i) ~= abp.bot)"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp2",
  "file": "conjectures/extracted/alternating_bit_protocol-abp2.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "abp.index.le(abp.sender_i, abp.sender_gen_i)"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp3",
  "file": "conjectures/extracted/alternating_bit_protocol-abp3.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall A:abp.ack_msg_t. (~(((~abp.sender_bit() & ~abp.receiver_bit()) & abp.ack_msg.le(A, A))) | abp.abit(A))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp4",
  "file": "conjectures/extracted/alternating_bit_protocol-abp4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall M1:abp.data_msg_t. forall M2:abp.data_msg_t. (~(((~abp.sender_bit() & ~abp.receiver_bit()) & abp.data_msg.le(M1, M2))) | ~((abp.dbit(M1) & ~abp.dbit(M2))))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp5",
  "file": "conjectures/extracted/alternating_bit_protocol-abp5.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall A:abp.ack_msg_t. (~(((abp.sender_bit() & abp.receiver_bit()) & abp.ack_msg.le(A, A))) | ~abp.abit(A))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp6",
  "file": "conjectures/extracted/alternating_bit_protocol-abp6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall M1:abp.data_msg_t. forall M2:abp.data_msg_t. (~(((abp.sender_bit() & abp.receiver_bit()) & abp.data_msg.le(M1, M2))) | ~((~abp.dbit(M1) & abp.dbit(M2))))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp7",
  "file": "conjectures/extracted/alternating_bit_protocol-abp7.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall M:abp.data_msg_t. (~(((~abp.sender_bit() & abp.receiver_bit()) & abp.data_msg.le(M, M))) | ~abp.dbit(M))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp8",
  "file": "conjectures/extracted/alternating_bit_protocol-abp8.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall A2:abp.ack_msg_t. forall A1:abp.ack_msg_t. (~(((~abp.sender_bit() & abp.receiver_bit()) & abp.ack_msg.le(A1, A2))) | ~((abp.abit(A1) & ~abp.abit(A2))))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp9",
  "file": "conjectures/extracted/alternating_bit_protocol-abp9.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall M:abp.data_msg_t. (~(((abp.sender_bit() & ~abp.receiver_bit()) & abp.data_msg.le(M, M))) | abp.dbit(M))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_ack_msg",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_ack_msg.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall Z:abp.ack_msg_t. forall Y:abp.ack_msg_t. forall X:abp.ack_msg_t. (~((abp.ack_msg.le(X, Y) & abp.ack_msg.le(Y, Z))) | abp.ack_msg.le(X, Z))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_ack_msg0",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_ack_msg0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall Y:abp.ack_msg_t. forall X:abp.ack_msg_t. (~((abp.ack_msg.le(X, Y) & abp.ack_msg.le(Y, X))) | X = Y)"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_ack_msg1",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_ack_msg1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall Y:abp.ack_msg_t. forall X:abp.ack_msg_t. (~abp.ack_msg.le(X, Y) | (abp.ack_msg.le(X, X) & abp.ack_msg.le(Y, Y)))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_ack_msg2",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_ack_msg2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall Y:abp.ack_msg_t. forall X:abp.ack_msg_t. (~((abp.ack_msg.le(X, X) & abp.ack_msg.le(Y, Y))) | (abp.ack_msg.le(X, Y) | abp.ack_msg.le(Y, X)))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_data_msg",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_data_msg.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:abp.data_msg_t. forall Y:abp.data_msg_t. forall Z:abp.data_msg_t. (~((abp.data_msg.le(X, Y) & abp.data_msg.le(Y, Z))) | abp.data_msg.le(X, Z))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_data_msg0",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_data_msg0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:abp.data_msg_t. forall Y:abp.data_msg_t. (~((abp.data_msg.le(X, Y) & abp.data_msg.le(Y, X))) | X = Y)"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_data_msg1",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_data_msg1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:abp.data_msg_t. forall Y:abp.data_msg_t. (~abp.data_msg.le(X, Y) | (abp.data_msg.le(X, X) & abp.data_msg.le(Y, Y)))"
 },
 {
  "base": "alternating_bit_protocol",
  "conjecture": "abp_data_msg2",
  "file": "conjectures/extracted/alternating_bit_protocol-abp_data_msg2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:abp.data_msg_t. forall Y:abp.data_msg_t. (~((abp.data_msg.le(X, X) & abp.data_msg.le(Y, Y))) | (abp.data_msg.le(X, Y) | abp.data_msg.le(Y, X)))"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj10",
  "file": "conjectures/extracted/byz_paxos-conj10.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. forall R:round. (~((~member_b(N) & prepare(N, R, V1) & prepare(N, R, V2))) | V1 = V2)"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj11",
  "file": "conjectures/extracted/byz_paxos-conj11.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~((~member_b(N) & vote(N, R, V))) | exists Q:quorum_c. forall N2:node. (~((~member_b(N2) & member_c(N2, Q))) | prepare(N2, R, V)))"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj12",
  "file": "conjectures/extracted/byz_paxos-conj12.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~((~member_b(N) & decision(N, R, V))) | exists Q:quorum_c. forall N2:node. (~((~member_b(N2) & member_c(N2, Q))) | vote(N2, R, V)))"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj13",
  "file": "conjectures/extracted/byz_paxos-conj13.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall Q:quorum_c. forall N:node. forall V2:value. forall R2:round. (~((~le(R2, R1) & ~member_b(N) & prepare(N, R2, V2) & V1 ~= V2)) | exists N2:node. (~member_b(N2) & member_c(N2, Q) & left_rnd(N2, R1) & ~vote(N2, R1, V1)))"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj14",
  "file": "conjectures/extracted/byz_paxos-conj14.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((~member_b(N) & one_b(N, R2) & ~le(R2, R1))) | left_rnd(N, R1))"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj8",
  "file": "conjectures/extracted/byz_paxos-conj8.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. (~((~member_b(N1) & ~member_b(N2) & decision(N1, R1, V1) & decision(N2, R2, V2))) | V1 = V2)"
 },
 {
  "base": "byz_paxos",
  "conjecture": "conj9",
  "file": "conjectures/extracted/byz_paxos-conj9.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall M:node. (~((~member_b(N) & ~member_b(M) & rcved_one_b(N, R, M))) | one_b(M, R))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c",
  "file": "conjectures/extracted/fast_paxos-c.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. (~((decision(N1, R1, V1) & decision(N2, R2, V2))) | V1 = V2)"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c0",
  "file": "conjectures/extracted/fast_paxos-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall R:round. forall V2:value. (~((proposal(R, V1) & proposal(R, V2))) | V1 = V2)"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c1",
  "file": "conjectures/extracted/fast_paxos-c1.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. (~any_msg(R) | fast(R))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c10",
  "file": "conjectures/extracted/fast_paxos-c10.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((one_b(N, R2) & ~le(R2, R1))) | left_rnd(N, R1))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c11",
  "file": "conjectures/extracted/fast_paxos-c11.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. ~vote(N, none, V)"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c2",
  "file": "conjectures/extracted/fast_paxos-c2.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 4,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~((~fast(R) & exists N:node. decision(N, R, V))) | exists Q:quorum_c. forall N:node. (~member_c(N, Q) | vote(N, R, V)))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c3",
  "file": "conjectures/extracted/fast_paxos-c3.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 4,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~((fast(R) & exists N:node. decision(N, R, V))) | exists Q:quorum_f. forall N:node. (~member_f(N, Q) | vote(N, R, V)))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c4",
  "file": "conjectures/extracted/fast_paxos-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~((~fast(R) & vote(N, R, V))) | proposal(R, V))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c5",
  "file": "conjectures/extracted/fast_paxos-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~((fast(R) & vote(N, R, V))) | (proposal(R, V) | any_msg(R)))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c6",
  "file": "conjectures/extracted/fast_paxos-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. ~((any_msg(R) & proposal(R, V)))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c7",
  "file": "conjectures/extracted/fast_paxos-c7.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. forall R:round. (~(((fast(R) & vote(N, R, V1)) & vote(N, R, V2))) | V1 = V2)"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c8",
  "file": "conjectures/extracted/fast_paxos-c8.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall Q:quorum_c. forall V2:value. forall R2:round. forall R1:round. (~(((~fast(R1) & ~le(R2, R1)) & ((proposal(R2, V2) & V1 ~= V2) | any_msg(R2)))) | exists N:node. ((member_c(N, Q) & left_rnd(N, R1)) & ~vote(N, R1, V1)))"
 },
 {
  "base": "fast_paxos",
  "conjecture": "c9",
  "file": "conjectures/extracted/fast_paxos-c9.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. forall R2:round. forall R1:round. forall Q:quorum_f. (~(((fast(R1) & ~le(R2, R1)) & ((proposal(R2, V2) & V1 ~= V2) | any_msg(R2)))) | exists N:node. ((member_f(N, Q) & left_rnd(N, R1)) & ~vote(N, R1, V1)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c",
  "file": "conjectures/extracted/fast_paxos_epr-c.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. (~((decision(N1, R1, V1) & decision(N2, R2, V2))) | V1 = V2)"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c0",
  "file": "conjectures/extracted/fast_paxos_epr-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall R:round. forall V2:value. (~((proposal(R, V1) & proposal(R, V2))) | V1 = V2)"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c1",
  "file": "conjectures/extracted/fast_paxos_epr-c1.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. (~any_msg(R) | fast(R))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c10",
  "file": "conjectures/extracted/fast_paxos_epr-c10.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall N:node. forall V2:value. forall R2:round. forall R1:round. (~((one_b_max_vote(N, R2, none, V1) & ~le(R2, R1))) | ~vote(N, R1, V2))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c11",
  "file": "conjectures/extracted/fast_paxos_epr-c11.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall RMAX:round. forall R:round. forall V:value. (~((one_b_max_vote(N, R, RMAX, V) & RMAX ~= none)) | (~le(R, RMAX) & vote(N, RMAX, V)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c12",
  "file": "conjectures/extracted/fast_paxos_epr-c12.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall RMAX:round. forall R:round. forall V:value. forall VOTHER:value. forall ROTHER:round. (~((((one_b_max_vote(N, R, RMAX, V) & RMAX ~= none) & ~le(R, ROTHER)) & ~le(ROTHER, RMAX))) | ~vote(N, ROTHER, VOTHER))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c13",
  "file": "conjectures/extracted/fast_paxos_epr-c13.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall RMAX:round. forall N:node. forall R:round. forall V:value. (~one_b_max_vote(N, R, RMAX, V) | one_b(N, R))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c14",
  "file": "conjectures/extracted/fast_paxos_epr-c14.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((one_b(N, R2) & ~le(R2, R1))) | left_rnd(N, R1))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c15",
  "file": "conjectures/extracted/fast_paxos_epr-c15.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. ~vote(N, none, V)"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c2",
  "file": "conjectures/extracted/fast_paxos_epr-c2.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 4,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~((~fast(R) & exists N:node. decision(N, R, V))) | exists Q:c_quorum. forall N:node. (~c_member(N, Q) | vote(N, R, V)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c3",
  "file": "conjectures/extracted/fast_paxos_epr-c3.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 4,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~((fast(R) & exists N:node. decision(N, R, V))) | exists Q:f_quorum. forall N:node. (~f_member(N, Q) | vote(N, R, V)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c4",
  "file": "conjectures/extracted/fast_paxos_epr-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~((~fast(R) & vote(N, R, V))) | proposal(R, V))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c5",
  "file": "conjectures/extracted/fast_paxos_epr-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~((fast(R) & vote(N, R, V))) | (proposal(R, V) | any_msg(R)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c6",
  "file": "conjectures/extracted/fast_paxos_epr-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. ~((any_msg(R) & proposal(R, V)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c7",
  "file": "conjectures/extracted/fast_paxos_epr-c7.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. forall R:round. (~(((fast(R) & vote(N, R, V1)) & vote(N, R, V2))) | V1 = V2)"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c8",
  "file": "conjectures/extracted/fast_paxos_epr-c8.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall Q:c_quorum. forall V2:value. forall R2:round. forall R1:round. (~(((~fast(R1) & ~le(R2, R1)) & ((proposal(R2, V2) & V1 ~= V2) | any_msg(R2)))) | exists N:node. ((c_member(N, Q) & left_rnd(N, R1)) & ~vote(N, R1, V1)))"
 },
 {
  "base": "fast_paxos_epr",
  "conjecture": "c9",
  "file": "conjectures/extracted/fast_paxos_epr-c9.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall Q:f_quorum. forall V2:value. forall R2:round. forall R1:round. (~(((fast(R1) & ~le(R2, R1)) & ((proposal(R2, V2) & V1 ~= V2) | any_msg(R2)))) | exists N:node. ((f_member(N, Q) & left_rnd(N, R1)) & ~vote(N, R1, V1)))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c",
  "file": "conjectures/extracted/flexible_paxos_epr-c.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. (~((decision(N1, R1, V1) & decision(N2, R2, V2))) | V1 = V2)"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c0",
  "file": "conjectures/extracted/flexible_paxos_epr-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall R:round. forall V2:value. (~((proposal(R, V1) & proposal(R, V2))) | V1 = V2)"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c1",
  "file": "conjectures/extracted/flexible_paxos_epr-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~vote(N, R, V) | proposal(R, V))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c2",
  "file": "conjectures/extracted/flexible_paxos_epr-c2.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 4,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~(exists N:node. decision(N, R, V)) | exists Q:quorum_2. forall N:node. (~member_2(N, Q) | vote(N, R, V)))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c3",
  "file": "conjectures/extracted/flexible_paxos_epr-c3.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall N:node. forall V2:value. forall R2:round. forall R1:round. (~((one_b_max_vote(N, R2, none, V1) & ~le(R2, R1))) | ~vote(N, R1, V2))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c4",
  "file": "conjectures/extracted/flexible_paxos_epr-c4.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall RMAX:round. forall R:round. forall V:value. (~((one_b_max_vote(N, R, RMAX, V) & RMAX ~= none)) | (~le(R, RMAX) & vote(N, RMAX, V)))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c5",
  "file": "conjectures/extracted/flexible_paxos_epr-c5.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall RMAX:round. forall R:round. forall V:value. forall VOTHER:value. forall ROTHER:round. (~((((one_b_max_vote(N, R, RMAX, V) & RMAX ~= none) & ~le(R, ROTHER)) & ~le(ROTHER, RMAX))) | ~vote(N, ROTHER, VOTHER))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c6",
  "file": "conjectures/extracted/flexible_paxos_epr-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. ~vote(N, none, V)"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c7",
  "file": "conjectures/extracted/flexible_paxos_epr-c7.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. forall Q:quorum_2. forall R2:round. forall R1:round. (~(((~le(R2, R1) & proposal(R2, V2)) & V1 ~= V2)) | exists N:node. ((member_2(N, Q) & left_rnd(N, R1)) & ~vote(N, R1, V1)))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c8",
  "file": "conjectures/extracted/flexible_paxos_epr-c8.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall RMAX:round. forall N:node. forall R:round. forall V:value. (~one_b_max_vote(N, R, RMAX, V) | one_b(N, R))"
 },
 {
  "base": "flexible_paxos_epr",
  "conjecture": "c9",
  "file": "conjectures/extracted/flexible_paxos_epr-c9.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((one_b(N, R2) & ~le(R2, R1))) | left_rnd(N, R1))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c",
  "file": "conjectures/extracted/multi_paxos_epr-c.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. forall I:inst. (~((decision(N1, I, R1, V1) & decision(N2, I, R2, V2))) | V1 = V2)"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c0",
  "file": "conjectures/extracted/multi_paxos_epr-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. forall I:inst. (~proposal(I, R, V) | active(R))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c1",
  "file": "conjectures/extracted/multi_paxos_epr-c1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. forall R:round. forall I:inst. (~((proposal(I, R, V1) & proposal(I, R, V2))) | V1 = V2)"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c10",
  "file": "conjectures/extracted/multi_paxos_epr-c10.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall M:votemap. (~one_b_msg(N, R, M) | joined_round(N, R))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c2",
  "file": "conjectures/extracted/multi_paxos_epr-c2.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. forall I:inst. (~vote(N, I, R, V) | proposal(I, R, V))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c3",
  "file": "conjectures/extracted/multi_paxos_epr-c3.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 5,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall I:inst. forall R:round. forall V:value. (~(exists N:node. decision(N, I, R, V)) | exists Q:quorum. forall N:node. (~member(N, Q) | vote(N, I, R, V)))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c4",
  "file": "conjectures/extracted/multi_paxos_epr-c4.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall R1:round. forall N:node. forall V2:value. forall R2:round. forall M:votemap. forall I:inst. (~(((one_b_msg(N, R2, M) & maxr(M, I) = none) & ~le(R2, R1))) | ~vote(N, I, R1, V2))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c5",
  "file": "conjectures/extracted/multi_paxos_epr-c5.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall R:round. forall M:votemap. forall I:inst. (~((one_b_msg(N, R, M) & maxr(M, I) ~= none)) | (~le(R, maxr(M, I)) & vote(N, I, maxr(M, I), maxv(M, I))))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c6",
  "file": "conjectures/extracted/multi_paxos_epr-c6.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall M:votemap. forall N:node. forall R:round. forall VOTHER:value. forall I:inst. forall ROTHER:round. (~((((one_b_msg(N, R, M) & maxr(M, I) ~= none) & ~le(R, ROTHER)) & ~le(ROTHER, maxr(M, I)))) | ~vote(N, I, ROTHER, VOTHER))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c7",
  "file": "conjectures/extracted/multi_paxos_epr-c7.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. forall I:inst. ~vote(N, I, none, V)"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c8",
  "file": "conjectures/extracted/multi_paxos_epr-c8.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. forall R2:round. forall R1:round. forall Q:quorum. forall I:inst. (~(((~le(R2, R1) & active(R2)) & ~proposal(I, R2, V))) | exists N:node. ((member(N, Q) & left_round(N, R1)) & ~vote(N, I, R1, V)))"
 },
 {
  "base": "multi_paxos_epr",
  "conjecture": "c9",
  "file": "conjectures/extracted/multi_paxos_epr-c9.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((joined_round(N, R2) & ~le(R2, R1))) | left_round(N, R1))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c",
  "file": "conjectures/extracted/stoppable_paxos_epr-c.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. forall I:inst. (~((decision(N1, I, R1, V1) & decision(N2, I, R2, V2))) | V1 = V2)"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c0",
  "file": "conjectures/extracted/stoppable_paxos_epr-c0.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R2:round. forall R1:round. forall I2:inst. forall V:value. forall N1:node. forall N2:node. forall I1:inst. (~((decision(N1, I1, R1, stop) & ~inst_le(I2, I1))) | ~decision(N2, I2, R2, V))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c1",
  "file": "conjectures/extracted/stoppable_paxos_epr-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. forall I:inst. (~proposal(I, R, V) | active(R))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c10",
  "file": "conjectures/extracted/stoppable_paxos_epr-c10.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I2:inst. forall R:round. forall V:value. forall I1:inst. (~((proposal(I1, R, stop) & ~inst_le(I2, I1))) | ~proposal(I2, R, V))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c11",
  "file": "conjectures/extracted/stoppable_paxos_epr-c11.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R2:round. forall I2:inst. forall V:value. forall R1:round. forall Q:quorum. forall I1:inst. (~(((~le(R2, R1) & ~inst_le(I2, I1)) & proposal(I2, R2, V))) | exists N:node. ((member(N, Q) & left_round(N, R1)) & ~vote(N, I1, R1, stop)))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c12",
  "file": "conjectures/extracted/stoppable_paxos_epr-c12.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R2:round. forall I2:inst. forall V:value. forall R1:round. forall Q:quorum. forall I1:inst. (~(((~le(R2, R1) & ~inst_le(I2, I1)) & proposal(I1, R2, stop))) | exists N:node. ((member(N, Q) & left_round(N, R1)) & ~vote(N, I2, R1, V)))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c13",
  "file": "conjectures/extracted/stoppable_paxos_epr-c13.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((joined_round(N, R2) & ~le(R2, R1))) | left_round(N, R1))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c14",
  "file": "conjectures/extracted/stoppable_paxos_epr-c14.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall M:votemap. (~one_b_msg(N, R, M) | joined_round(N, R))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c2",
  "file": "conjectures/extracted/stoppable_paxos_epr-c2.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. forall R:round. forall I:inst. (~((proposal(I, R, V1) & proposal(I, R, V2))) | V1 = V2)"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c3",
  "file": "conjectures/extracted/stoppable_paxos_epr-c3.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. forall I:inst. (~vote(N, I, R, V) | proposal(I, R, V))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c4",
  "file": "conjectures/extracted/stoppable_paxos_epr-c4.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 5,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall I:inst. forall R:round. forall V:value. (~(exists N:node. decision(N, I, R, V)) | exists Q:quorum. forall N:node. (~member(N, Q) | vote(N, I, R, V)))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c5",
  "file": "conjectures/extracted/stoppable_paxos_epr-c5.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall R1:round. forall N:node. forall V2:value. forall R2:round. forall M:votemap. forall I:inst. (~(((one_b_msg(N, R2, M) & maxr(M, I) = none) & ~le(R2, R1))) | ~vote(N, I, R1, V2))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c6",
  "file": "conjectures/extracted/stoppable_paxos_epr-c6.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall R:round. forall M:votemap. forall I:inst. (~((one_b_msg(N, R, M) & maxr(M, I) ~= none)) | (~le(R, maxr(M, I)) & vote(N, I, maxr(M, I), maxv(M, I))))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c7",
  "file": "conjectures/extracted/stoppable_paxos_epr-c7.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall M:votemap. forall N:node. forall R:round. forall VOTHER:value. forall I:inst. forall ROTHER:round. (~((((one_b_msg(N, R, M) & maxr(M, I) ~= none) & ~le(R, ROTHER)) & ~le(ROTHER, maxr(M, I)))) | ~vote(N, I, ROTHER, VOTHER))"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c8",
  "file": "conjectures/extracted/stoppable_paxos_epr-c8.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. forall I:inst. ~vote(N, I, none, V)"
 },
 {
  "base": "stoppable_paxos_epr",
  "conjecture": "c9",
  "file": "conjectures/extracted/stoppable_paxos_epr-c9.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. forall R2:round. forall R1:round. forall Q:quorum. forall I:inst. (~(((~le(R2, R1) & active(R2)) & ~proposal(I, R2, V))) | exists N:node. ((member(N, Q) & left_round(N, R1)) & ~vote(N, I, R1, V)))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb",
  "file": "conjectures/extracted/tlb_pcrel-tlb.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall P:tlb.processor. (~((((((((((tlb.pc_i3(P) | tlb.pc_i4(P)) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) | tlb.pc_i9(P)) | tlb.pc_i11(P)) | tlb.pc_i12(P)) | tlb.pc_i14(P))) | tlb.plock(tlb.writepmap(P)))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb0",
  "file": "conjectures/extracted/tlb_pcrel-tlb0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall P2:tlb.processor. forall P1:tlb.processor. (~(((((((((((tlb.pc_i3(P1) | tlb.pc_i4(P1)) | tlb.pc_i5(P1)) | tlb.pc_i6(P1)) | tlb.pc_i7(P1)) | tlb.pc_i8(P1)) | tlb.pc_i9(P1)) | tlb.pc_i11(P1)) | tlb.pc_i12(P1)) | tlb.pc_i14(P1)) & (((((((((tlb.pc_i3(P2) | tlb.pc_i4(P2)) | tlb.pc_i5(P2)) | tlb.pc_i6(P2)) | tlb.pc_i7(P2)) | tlb.pc_i8(P2)) | tlb.pc_i9(P2)) | tlb.pc_i11(P2)) | tlb.pc_i12(P2)) | tlb.pc_i14(P2)))) | (tlb.writepmap(P1) ~= tlb.writepmap(P2) | P1 = P2))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb1",
  "file": "conjectures/extracted/tlb_pcrel-tlb1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C2:tlb.processor. forall C1:tlb.processor. forall P:tlb.processor. (~((tlb.currentcpu(P, C1) & tlb.currentcpu(P, C2))) | C1 = C2)"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb10",
  "file": "conjectures/extracted/tlb_pcrel-tlb10.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. (~((tlb.actionlock(C) & ~(((tlb.pc_r5(C) | tlb.pc_r6(C)) | tlb.pc_r7(C))))) | tlb.plock(tlb.userpmap(C)))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb11",
  "file": "conjectures/extracted/tlb_pcrel-tlb11.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~(((tlb.actionlock(C) & ~(((tlb.pc_r5(C) | tlb.pc_r6(C)) | tlb.pc_r7(C)))) & (((((((((tlb.pc_i3(P) | tlb.pc_i4(P)) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) | tlb.pc_i9(P)) | tlb.pc_i11(P)) | tlb.pc_i12(P)) | tlb.pc_i14(P)))) | (tlb.userpmap(C) ~= tlb.writepmap(P) | (tlb.currentcpu(P, C) & (tlb.pc_i6(P) | tlb.pc_i7(P)))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb12",
  "file": "conjectures/extracted/tlb_pcrel-tlb12.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((tlb.pc_i5(P) | tlb.pc_i6(P)) | tlb.pc_i7(P)) & tlb.currentcpu(P, C))) | tlb.writepmap(P) = tlb.userpmap(C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb13",
  "file": "conjectures/extracted/tlb_pcrel-tlb13.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall P:tlb.processor. ((tlb.active(P) & ((((((tlb.pc_b1(P) | tlb.pc_m2(P)) | tlb.pc_m3(P)) | tlb.pc_m5(P)) | tlb.pc_i1(P)) | tlb.pc_r1(P)) | tlb.pc_r2(P))) | (~tlb.active(P) & ~(((((((tlb.pc_b1(P) | tlb.pc_m2(P)) | tlb.pc_m3(P)) | tlb.pc_m5(P)) | tlb.pc_i1(P)) | tlb.pc_r1(P)) | tlb.pc_r2(P)))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb14",
  "file": "conjectures/extracted/tlb_pcrel-tlb14.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((((tlb.pc_i3(P) | tlb.pc_i7(P)) | tlb.pc_i8(P)) & ~tlb.todo(P, C)) & ~tlb.pc_b1(C)) & tlb.userpmap(C) = tlb.writepmap(P))) | (((tlb.actionneeded(C) & ~tlb.pc_r5(C)) & ~tlb.pc_r6(C)) | P = C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb15",
  "file": "conjectures/extracted/tlb_pcrel-tlb15.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~(((((((tlb.pc_i4(P) | tlb.pc_i5(P)) | tlb.pc_i6(P)) & ~tlb.todo(P, C)) & ~tlb.currentcpu(P, C)) & ~tlb.pc_b1(C)) & tlb.userpmap(C) = tlb.writepmap(P))) | (((tlb.actionneeded(C) & ~tlb.pc_r5(C)) & ~tlb.pc_r6(C)) | P = C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb16",
  "file": "conjectures/extracted/tlb_pcrel-tlb16.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((tlb.pc_i9(P) | tlb.pc_i11(P)) & ~tlb.pc_b1(C)) & tlb.userpmap(C) = tlb.writepmap(P))) | (((tlb.actionneeded(C) & ~tlb.pc_r5(C)) & ~tlb.pc_r6(C)) | P = C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb17",
  "file": "conjectures/extracted/tlb_pcrel-tlb17.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall P:tlb.processor. (~((~tlb.pc_b1(P) & tlb.tlb(P) ~= tlb.pentry(tlb.userpmap(P)))) | ((tlb.actionneeded(P) & ~tlb.pc_r6(P)) | (tlb.pc_i12(P) & tlb.userpmap(P) = tlb.writepmap(P))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb18",
  "file": "conjectures/extracted/tlb_pcrel-tlb18.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((tlb.pc_i3(P) & ~tlb.todo(P, C)) & ~tlb.pc_b1(C)) & tlb.userpmap(C) = tlb.writepmap(P))) | ((tlb.interrupt(C) | P = C) | ((tlb.pc_r1(C) | tlb.pc_r2(C)) | tlb.pc_r3(C))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb19",
  "file": "conjectures/extracted/tlb_pcrel-tlb19.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~(((((((((tlb.pc_i4(P) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) & ~tlb.todo(P, C)) & ~tlb.pc_b1(C)) & ~tlb.currentcpu(P, C)) & tlb.userpmap(C) = tlb.writepmap(P))) | ((tlb.interrupt(C) | P = C) | ((tlb.pc_r1(C) | tlb.pc_r2(C)) | tlb.pc_r3(C))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb2",
  "file": "conjectures/extracted/tlb_pcrel-tlb2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~(((tlb.pc_i6(P) | tlb.pc_i7(P)) & tlb.currentcpu(P, C))) | tlb.actionlock(C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb20",
  "file": "conjectures/extracted/tlb_pcrel-tlb20.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((tlb.pc_i9(P) | tlb.pc_i11(P)) & ~tlb.pc_b1(C)) & tlb.userpmap(C) = tlb.writepmap(P))) | ((tlb.interrupt(C) | P = C) | ((tlb.pc_r1(C) | tlb.pc_r2(C)) | tlb.pc_r3(C))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb21",
  "file": "conjectures/extracted/tlb_pcrel-tlb21.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall C:tlb.processor. (~((tlb.tlb(C) ~= tlb.pentry(tlb.userpmap(C)) & ~tlb.pc_b1(C))) | ((tlb.interrupt(C) | (((tlb.pc_r1(C) | tlb.pc_r2(C)) | tlb.pc_r3(C)) | tlb.pc_r5(C))) | (tlb.pc_i12(C) & tlb.writepmap(C) = tlb.userpmap(C))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb22",
  "file": "conjectures/extracted/tlb_pcrel-tlb22.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((tlb.pc_i9(P) & ~tlb.todo(P, C)) | tlb.pc_i11(P)) & tlb.userpmap(C) = tlb.writepmap(P))) | ~tlb.pc_m2(C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb23",
  "file": "conjectures/extracted/tlb_pcrel-tlb23.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall P:tlb.processor. (~(tlb.tlb(P) ~= tlb.pentry(tlb.userpmap(P))) | ~tlb.pc_m2(P))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb24",
  "file": "conjectures/extracted/tlb_pcrel-tlb24.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "~tlb.error()"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb3",
  "file": "conjectures/extracted/tlb_pcrel-tlb3.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall P:tlb.processor. (~(((tlb.pc_r5(P) | tlb.pc_r6(P)) | tlb.pc_r7(P))) | tlb.actionlock(P))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb301",
  "file": "conjectures/extracted/tlb_pcrel-tlb301.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall P:tlb.processor. (((((((((((((((((((((((tlb.pc_i1(P) | tlb.pc_i2(P)) | tlb.pc_i3(P)) | tlb.pc_i4(P)) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) | tlb.pc_i9(P)) | tlb.pc_i11(P)) | tlb.pc_i12(P)) | tlb.pc_i14(P)) | tlb.pc_i15(P)) | tlb.pc_m2(P)) | tlb.pc_m3(P)) | tlb.pc_m5(P)) | tlb.pc_r1(P)) | tlb.pc_r2(P)) | tlb.pc_r3(P)) | tlb.pc_r5(P)) | tlb.pc_r6(P)) | tlb.pc_r7(P)) | tlb.pc_r8(P)) | tlb.pc_b1(P))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb4",
  "file": "conjectures/extracted/tlb_pcrel-tlb4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall P2:tlb.processor. forall C:tlb.processor. forall P1:tlb.processor. (~(((((tlb.pc_i6(P1) | tlb.pc_i7(P1)) & tlb.currentcpu(P1, C)) & (tlb.pc_i6(P2) | tlb.pc_i7(P2))) & tlb.currentcpu(P2, C))) | P1 = P2)"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb5",
  "file": "conjectures/extracted/tlb_pcrel-tlb5.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall P2:tlb.processor. forall P1:tlb.processor. ~(((((tlb.pc_r5(P1) | tlb.pc_r6(P1)) | tlb.pc_r7(P1)) & (tlb.pc_i6(P2) | tlb.pc_i7(P2))) & tlb.currentcpu(P2, P1)))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb6",
  "file": "conjectures/extracted/tlb_pcrel-tlb6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((((((tlb.pc_i3(P) | tlb.pc_i4(P)) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) | tlb.pc_i9(P)) & tlb.todo(P, C))) | (~tlb.pc_b1(C) & C ~= P))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb7",
  "file": "conjectures/extracted/tlb_pcrel-tlb7.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~((((((tlb.pc_i4(P) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) & tlb.currentcpu(P, C))) | ~tlb.pc_b1(C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb8",
  "file": "conjectures/extracted/tlb_pcrel-tlb8.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:tlb.processor. forall P:tlb.processor. (~(((((tlb.pc_i5(P) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) & tlb.currentcpu(P, C))) | tlb.userpmap(C) = tlb.writepmap(P))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb9",
  "file": "conjectures/extracted/tlb_pcrel-tlb9.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:tlb.processor. (~tlb.pc_b1(C) | ~tlb.actionlock(C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb_tp1_impl5",
  "file": "conjectures/extracted/tlb_pcrel-tlb_tp1_impl5.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "(~tlb.plock(tlb.tp1.sk2) | exists P:tlb.processor. (tlb.writepmap(P) = tlb.tp1.sk2 & (((((((((tlb.pc_i3(P) | tlb.pc_i4(P)) | tlb.pc_i5(P)) | tlb.pc_i6(P)) | tlb.pc_i7(P)) | tlb.pc_i8(P)) | tlb.pc_i9(P)) | tlb.pc_i11(P)) | tlb.pc_i12(P)) | tlb.pc_i14(P))))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb_tp1_impl6",
  "file": "conjectures/extracted/tlb_pcrel-tlb_tp1_impl6.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "(~(((((tlb.pc_i4(tlb.tp1.sk1) | tlb.pc_i5(tlb.tp1.sk1)) | tlb.pc_i6(tlb.tp1.sk1)) | tlb.pc_i7(tlb.tp1.sk1)) | tlb.pc_i8(tlb.tp1.sk1))) | exists C:tlb.processor. tlb.currentcpu(tlb.tp1.sk1, C))"
 },
 {
  "base": "tlb_pcrel",
  "conjecture": "tlb_tp1_impl7",
  "file": "conjectures/extracted/tlb_pcrel-tlb_tp1_impl7.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:tlb.processor. (~((((((tlb.pc_i4(tlb.tp1.sk1) | tlb.pc_i5(tlb.tp1.sk1)) | tlb.pc_i6(tlb.tp1.sk1)) | tlb.pc_i7(tlb.tp1.sk1)) | tlb.pc_i8(tlb.tp1.sk1)) & tlb.currentcpu(tlb.tp1.sk1, C))) | ((~tlb.pc_b1(C) & ~tlb.todo(tlb.tp1.sk1, C)) & tlb.tp1.sk1 ~= C))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:config. forall R2:round. forall R1:round. (~((minrelof(C, R1) & minrelof(C, R2))) | R1 = R2)"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c0",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c0.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall V2:value. forall R2:round. forall N1:node. forall N2:node. (~((decision(N1, R1, V1) & decision(N2, R2, V2))) | V1 = V2)"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c1",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall R:round. forall V2:value. (~((proposal(R, V1) & proposal(R, V2))) | V1 = V2)"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c10",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c10.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall RMAX:round. forall N:node. forall R:round. forall V:value. (~one_b_max_vote(N, R, RMAX, V) | joined_round(N, R))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c11",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c11.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((joined_round(N, R2) & ~le(R2, R1))) | left_rnd(N, R1))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c12",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c12.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:config. forall R:round. forall MINREL:round. (~((configure_round_msg(R, C) & minrelof(C, MINREL))) | (le(MINREL, R) & le(MINREL, master_minrel)))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c13",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c13.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 6,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "forall C:config. forall R:round. forall V:value. forall RR:round. forall Q:quorum. (~(((((irrelevant_msg(RR) & ~le(RR, R)) & configure_round_msg(R, C)) & quorumin(Q, C)) & ~(exists N:node. ((member(N, Q) & left_rnd(N, R)) & ~vote(N, R, V))))) | exists N:node. decision(N, RR, V))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c14",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c14.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. ~vote(N, none, V)"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c2",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C1:config. forall R:round. forall C2:config. (~((configure_round_msg(R, C1) & configure_round_msg(R, C2))) | C1 = C2)"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c3",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall MINREL:round. (~one_a(R, MINREL) | exists C:config. (configure_round_msg(R, C) & minrelof(C, MINREL)))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c4",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~vote(N, R, V) | proposal(R, V))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c5",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c5.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. forall R2:round. forall R1:round. (~((proposal(R2, V) & le(R1, R2))) | exists C:config. configure_round_msg(R1, C))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c6",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c6.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:config. forall R2:round. forall R1:round. forall R3:round. (~(((R2 = master_minrel | (configure_round_msg(R3, C) & minrelof(C, R2))) & ~le(R2, R1))) | irrelevant_msg(R2))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c7",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c7.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R2:round. forall R1:round. (~((irrelevant_msg(R2) & ~le(R2, R1))) | exists C:config. configure_round_msg(R1, C))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c8",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c8.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 5,
  "existentials": 3,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~(exists N:node. decision(N, R, V)) | exists C:config. exists Q:quorum. ((configure_round_msg(R, C) & quorumin(Q, C)) & forall N:node. (~member(N, Q) | vote(N, R, V))))"
 },
 {
  "base": "vertical_paxos_epr_unverified_optimization",
  "conjecture": "c9",
  "file": "conjectures/extracted/vertical_paxos_epr_unverified_optimization-c9.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall C:config. forall V1:value. forall V2:value. forall R2:round. forall R1:round. forall Q:quorum. (~(((((~le(R2, R1) & proposal(R2, V2)) & V1 ~= V2) & configure_round_msg(R1, C)) & quorumin(Q, C))) | exists N:node. ((member(N, Q) & left_rnd(N, R1)) & ~vote(N, R1, V1)))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "agreement1",
  "file": "conjectures/mypyvy/bosco_3t_safety-agreement1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V1:value. forall V2:value. (~((~member_f(N1) & ~member_f(N2) & dec(N1, V1) & dec(N2, V2))) | V1 = V2)"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "agreement2",
  "file": "conjectures/mypyvy/bosco_3t_safety-agreement2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((~member_f(N) & dec(N, V1) & und_cons_dec(V2))) | V1 = V2)"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/bosco_3t_safety-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~sent_msg(N1, N2, V) | sent_msg_proj(N1, N2))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/bosco_3t_safety-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~rcv_msg(N1, N2, V) | rcv_msg_proj(N1, N2))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/bosco_3t_safety-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~((~member_f(N1) & ~member_f(N2) & sent_msg(N1, N2, V) & rcv_msg_proj(N1, N2))) | rcv_msg(N1, N2, V))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/bosco_3t_safety-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~(~member_f(N1)) | ((~sent_msg(N1, N2, V) & ~input(N1, V)) | (input(N1, V) & sent_msg(N1, N2, V))))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/bosco_3t_safety-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((~member_f(N) & und_cons(N, V1) & und_cons(N, V2))) | V1 = V2)"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/bosco_3t_safety-c5.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~((~member_f(N) & und_cons(N, V))) | done(N))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/bosco_3t_safety-c6.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall N1:node. forall V:value. (~((~member_f(N2) & rcv_msg(N1, N2, V))) | sent_msg(N1, N2, V))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c7",
  "file": "conjectures/mypyvy/bosco_3t_safety-c7.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~((~member_f(N) & dec(N, V))) | exists B:quorum_b. forall M:node. (~((member_b(M, B) & ~member_f(M))) | sent_msg(M, M, V)))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c8",
  "file": "conjectures/mypyvy/bosco_3t_safety-c8.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~((~member_f(N) & done(N) & ~und_cons(N, V))) | ~(exists B:quorum_b. forall M:node. (~((member_b(M, B) & ~member_f(M))) | sent_msg(M, M, V))))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c9",
  "file": "conjectures/mypyvy/bosco_3t_safety-c9.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 4,
  "existentials": 5,
  "max_term_depth": 0,
  "golden_formula": "(forall V:value. (~und_cons_dec(V) | exists N:node. (~member_f(N) & und_cons(N, V))) | exists N1:node. exists N2:node. exists V1:value. exists V2:value. (~member_f(N1) & ~member_f(N2) & und_cons(N1, V1) & und_cons(N2, V2) & V1 ~= V2))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "validity1",
  "file": "conjectures/mypyvy/bosco_3t_safety-validity1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((forall N:node. (~(~member_f(N)) | input(N, V1)) & V1 ~= V2)) | forall M:node. (~(~member_f(M)) | ~dec(M, V2)))"
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "validity2",
  "file": "conjectures/mypyvy/bosco_3t_safety-validity2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((forall N:node. (~(~member_f(N)) | input(N, V1)) & V1 ~= V2)) | ~und_cons_dec(V2))"
 },
 {
  "base": "client_server_ae",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/client_server_ae-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_received(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))"
 },
 {
  "base": "client_server_ae",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/client_server_ae-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_sent(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))"
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/client_server_db_ae-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_received(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))"
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/client_server_db_ae-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_sent(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))"
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/client_server_db_ae-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall I:db_request_id. forall R:request. (~db_request_sent(I, R) | exists N:node. (t(I, N) & request_sent(N, R)))"
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/client_server_db_ae-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall I:db_request_id. forall P:response. (~db_response_sent(I, P) | exists R:request. (db_request_sent(I, R) & match(R, P)))"
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/client_server_db_ae-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:db_request_id. forall N1:node. forall N2:node. (~((t(I, N1) & t(I, N2))) | N1 = N2)"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/consensus_epr-c0.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall V1:value. forall N2:node. forall V2:value. (~((decided(N1, V1) & decided(N2, V2))) | V1 = V2)"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/consensus_epr-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((leader(N1) & leader(N2))) | N1 = N2)"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/consensus_epr-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~votes(N, N1) | vote_msg(N1, N))"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/consensus_epr-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. forall N2:node. (~((vote_msg(N, N1) & vote_msg(N, N2))) | N1 = N2)"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/consensus_epr-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~vote_msg(N, N1) | voted(N))"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/consensus_epr-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "exists Q:quorum. forall N:node. forall M:node. (~((leader(N) & member(M, Q))) | votes(N, M))"
 },
 {
  "base": "consensus_epr",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/consensus_epr-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~decided(N, V) | leader(N))"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/consensus_forall-c0.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall V1:value. forall N2:node. forall V2:value. (~((decided(N1, V1) & decided(N2, V2))) | V1 = V2)"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/consensus_forall-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((leader(N1) & leader(N2))) | N1 = N2)"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/consensus_forall-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~votes(N, N1) | vote_msg(N1, N))"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/consensus_forall-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. forall N2:node. (~((vote_msg(N, N1) & vote_msg(N, N2))) | N1 = N2)"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/consensus_forall-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~vote_msg(N, N1) | voted(N))"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/consensus_forall-c5.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~((leader(N) & member(N1, voting_quorum))) | votes(N, N1))"
 },
 {
  "base": "consensus_forall",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/consensus_forall-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~decided(N, V) | leader(N))"
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/consensus_wo_decide-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((leader(N1) & leader(N2))) | N1 = N2)"
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/consensus_wo_decide-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~votes(N, N1) | vote_msg(N1, N))"
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/consensus_wo_decide-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. forall N2:node. (~((vote_msg(N, N1) & vote_msg(N, N2))) | N1 = N2)"
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/consensus_wo_decide-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~vote_msg(N, N1) | voted(N))"
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/consensus_wo_decide-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~((leader(N) & member(N1, voting_quorum))) | votes(N, N1))"
 },
 {
  "base": "firewall",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/firewall-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall S:node. forall D:node. (~((sent(S, D) & internal(D))) | exists I:node. (internal(I) & sent(I, S)))"
 },
 {
  "base": "firewall",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/firewall-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall D:node. (~allowed_in(D) | exists I:node. (internal(I) & sent(I, D)))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. (~sent_msg_proj(N1) | exists N2:node. sent_msg(N1, N2))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~sent_msg(N1, N2) | sent_msg_proj(N1))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall N1:node. (~((~member_fs(N2) & ~member_fa(N2) & rcv_msg(N1, N2))) | sent_msg(N1, N2))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((~member_fi(N1) & ~member_fa(N1) & sent_msg_proj(N1))) | sent_msg(N1, N2))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c4.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((~member_fs(N1) & ~member_fa(N1) & sent_msg(N1, N2) & ~rcv_init(N1))) | exists A:quorum_a. forall M:node. (~member_a(M, A) | sent_msg_proj(M)))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. (~((~member_fs(N1) & ~member_fa(N1) & accept(N1))) | exists B:quorum_b. forall M:node. (~member_b(M, B) | sent_msg_proj(M)))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c6.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 2,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "(~(exists A:quorum_a. forall M:node. (~((member_a(M, A) & ~member_fs(M) & ~member_fa(M))) | sent_msg_proj(M))) | exists N:node. (~member_fs(N) & ~member_fa(N) & rcv_init(N)))"
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "unforgebility",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-unforgebility.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 1,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "(~(exists N:node. (~member_fs(N) & ~member_fa(N) & accept(N))) | exists M:node. (~member_fs(M) & ~member_fa(M) & rcv_init(M)))"
 },
 {
  "base": "learning_switch",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/learning_switch-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. table(T, X, X)"
 },
 {
  "base": "learning_switch",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/learning_switch-c1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. forall Z:node. (~((table(T, X, Y) & table(T, Y, Z))) | table(T, X, Z))"
 },
 {
  "base": "learning_switch",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/learning_switch-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. (~((table(T, X, Y) & table(T, Y, X))) | X = Y)"
 },
 {
  "base": "learning_switch",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/learning_switch-c3.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. forall Z:node. (~((table(T, X, Y) & table(T, X, Z))) | (table(T, Y, Z) | table(T, Z, Y)))"
 },
 {
  "base": "learning_switch",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/learning_switch-c4.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall PS:node. forall PD:node. forall S:node. forall D:node. (~((pending(PS, PD, S, D) & PS ~= S)) | table(PS, S, PS))"
 },
 {
  "base": "learning_switch",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/learning_switch-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. (~((table(T, X, Y) & T ~= Y & X ~= Y)) | table(T, Y, T))"
 },
 {
  "base": "lockserv",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/lockserv-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((grant_msg(N1) & grant_msg(N2))) | N1 = N2)"
 },
 {
  "base": "lockserv",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/lockserv-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((unlock_msg(N1) & unlock_msg(N2))) | N1 = N2)"
 },
 {
  "base": "lockserv",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/lockserv-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. ~((holds_lock(N1) & grant_msg(N2)))"
 },
 {
  "base": "lockserv",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/lockserv-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. ~((holds_lock(N1) & unlock_msg(N2)))"
 },
 {
  "base": "lockserv",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/lockserv-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. ~((grant_msg(N1) & unlock_msg(N2)))"
 },
 {
  "base": "lockserv",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/lockserv-c5.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. ~((grant_msg(N) & server_holds_lock()))"
 },
 {
  "base": "lockserv",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/lockserv-c6.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. ~((holds_lock(N) & server_holds_lock()))"
 },
 {
  "base": "lockserv",
  "conjecture": "c7",
  "file": "conjectures/mypyvy/lockserv-c7.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. ~((unlock_msg(N) & server_holds_lock()))"
 },
 {
  "base": "lockserv",
  "conjecture": "mutex",
  "file": "conjectures/mypyvy/lockserv-mutex.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((holds_lock(N1) & holds_lock(N2))) | N1 = N2)"
 },
 {
  "base": "paxos_epr",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/paxos_epr-c0.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall R2:round. forall V2:value. (~((decision(R1, V1) & decision(R2, V2))) | V1 = V2)"
 },
 {
  "base": "paxos_epr",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/paxos_epr-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V1:value. forall V2:value. (~((proposal(R, V1) & proposal(R, V2))) | V1 = V2)"
 },
 {
  "base": "paxos_epr",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/paxos_epr-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~vote(N, R, V) | proposal(R, V))"
 },
 {
  "base": "paxos_epr",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/paxos_epr-c3.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~decision(R, V) | exists Q:quorum. forall N:node. (~member(N, Q) | vote(N, R, V)))"
 },
 {
  "base": "paxos_epr",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/paxos_epr-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((one_b(N, R2) & ~le(R2, R1))) | left_round(N, R1))"
 },
 {
  "base": "paxos_epr",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/paxos_epr-c5.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall R2:round. forall V1:value. forall V2:value. forall Q:quorum. (~((~le(R2, R1) & proposal(R2, V2) & V1 ~= V2)) | exists N:node. (member(N, Q) & left_round(N, R1) & ~vote(N, R1, V1)))"
 },
 {
  "base": "raft",
  "conjecture": "AER_term_log",
  "file": "conjectures/mypyvy/raft-AER_term_log.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall T:term. forall EI:index. forall ET:term. (~append_reply_msg(N, T, EI, ET) | term_at(term_log(T), EI, ET))"
 },
 {
  "base": "raft",
  "conjecture": "AE_none_means_init",
  "file": "conjectures/mypyvy/raft-AE_none_means_init.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:term. forall OPI:option_index. forall OPT:option_term. forall EI:index. forall ET:term. forall EV:value. (~((append_msg(T, OPI, OPT, EI, ET, EV) & is_none_index(OPI))) | EI = index_zero)"
 },
 {
  "base": "raft",
  "conjecture": "AE_option_wf",
  "file": "conjectures/mypyvy/raft-AE_option_wf.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:term. forall OPI:option_index. forall OPT:option_term. forall EI:index. forall ET:term. forall EV:value. (~append_msg(T, OPI, OPT, EI, ET, EV) | ((~is_none_index(OPI) & ~is_none_term(OPT)) | (is_none_term(OPT) & is_none_index(OPI))))"
 },
 {
  "base": "raft",
  "conjecture": "AE_prev_term_log",
  "file": "conjectures/mypyvy/raft-AE_prev_term_log.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. forall PLI:option_index. forall PLT:option_term. forall EI:index. forall ET:term. forall EV:value. (~((append_msg(T, PLI, PLT, EI, ET, EV) & ~is_none_index(PLI))) | term_at(term_log(T), oi_index(PLI), ot_term(PLT)))"
 },
 {
  "base": "raft",
  "conjecture": "AE_some_succ",
  "file": "conjectures/mypyvy/raft-AE_some_succ.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. forall OPI:option_index. forall OPT:option_term. forall EI:index. forall ET:term. forall EV:value. (~((append_msg(T, OPI, OPT, EI, ET, EV) & ~is_none_index(OPI))) | (~index_le(EI, oi_index(OPI)) & forall I:index. (~(~index_le(EI, I)) | index_le(I, oi_index(OPI)))))"
 },
 {
  "base": "raft",
  "conjecture": "AE_term_log",
  "file": "conjectures/mypyvy/raft-AE_term_log.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall T:term. forall PLI:option_index. forall PLT:option_term. forall EI:index. forall ET:term. forall EV:value. (~append_msg(T, PLI, PLT, EI, ET, EV) | (term_at(term_log(T), EI, ET) & EV = value_at(term_log(T), EI)))"
 },
 {
  "base": "raft",
  "conjecture": "CI_zero_until_commit",
  "file": "conjectures/mypyvy/raft-CI_zero_until_commit.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~(commit_index ~= index_zero) | committed(commit_index, commit_value))"
 },
 {
  "base": "raft",
  "conjecture": "RV_none_index_not_used",
  "file": "conjectures/mypyvy/raft-RV_none_index_not_used.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. forall I:index. (~((request_vote_msg(C, T, OLI, OLT) & is_none_index(OLI) & ~left_term(C, T) & ~started(T))) | ~index_used(current_log(C), I))"
 },
 {
  "base": "raft",
  "conjecture": "RV_option_wf",
  "file": "conjectures/mypyvy/raft-RV_option_wf.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. forall OLI:option_index. forall OLT:option_term. (~request_vote_msg(N, T, OLI, OLT) | ((~is_none_index(OLI) & ~is_none_term(OLT)) | (is_none_term(OLT) & is_none_index(OLI))))"
 },
 {
  "base": "raft",
  "conjecture": "RV_partial_func",
  "file": "conjectures/mypyvy/raft-RV_partial_func.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:node. forall T:term. forall OLI1:option_index. forall OLT1:option_term. forall OLI2:option_index. forall OLT2:option_term. (~((request_vote_msg(C, T, OLI1, OLT1) & request_vote_msg(C, T, OLI2, OLT2))) | (OLI1 = OLI2 & OLT1 = OLT2))"
 },
 {
  "base": "raft",
  "conjecture": "RV_some_index_no_bigger",
  "file": "conjectures/mypyvy/raft-RV_some_index_no_bigger.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. forall I:index. (~((request_vote_msg(C, T, OLI, OLT) & ~is_none_index(OLI) & ~left_term(C, T) & ~started(T) & ~index_le(I, oi_index(OLI)))) | ~index_used(current_log(C), I))"
 },
 {
  "base": "raft",
  "conjecture": "RV_some_index_term_at",
  "file": "conjectures/mypyvy/raft-RV_some_index_term_at.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. (~((request_vote_msg(C, T, OLI, OLT) & ~is_none_index(OLI) & ~left_term(C, T) & ~started(T))) | term_at(current_log(C), oi_index(OLI), ot_term(OLT)))"
 },
 {
  "base": "raft",
  "conjecture": "RV_term",
  "file": "conjectures/mypyvy/raft-RV_term.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. (~request_vote_msg(C, T, OLI, OLT) | (current_term(C, T) | left_term(C, T)))"
 },
 {
  "base": "raft",
  "conjecture": "any_committed_commit_index_committed",
  "file": "conjectures/mypyvy/raft-any_committed_commit_index_committed.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. forall V:value. (~committed(I, V) | committed(commit_index, commit_value))"
 },
 {
  "base": "raft",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/raft-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. forall V1:value. forall V2:value. (~((committed(I, V1) & committed(I, V2))) | V1 = V2)"
 },
 {
  "base": "raft",
  "conjecture": "choosable_AER_current_log",
  "file": "conjectures/mypyvy/raft-choosable_AER_current_log.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "forall T1:term. forall I:index. forall N:node. (~((exists Q:quorum. forall N1:node. (~member(N1, Q) | (append_reply_msg(N1, T1, I, T1) | ~left_term(N1, T1))) & append_reply_msg(N, T1, I, T1))) | term_at(current_log(N), I, T1))"
 },
 {
  "base": "raft",
  "conjecture": "choosable_future_term_log",
  "file": "conjectures/mypyvy/raft-choosable_future_term_log.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "forall T1:term. forall I:index. forall T2:term. (~((term_at(term_log(T1), I, T1) & exists Q:quorum. forall N:node. (~member(N, Q) | (append_reply_msg(N, T1, I, T1) | ~left_term(N, T1))) & started(T2) & term_le(T1, T2))) | term_at(term_log(T2), I, T1))"
 },
 {
  "base": "raft",
  "conjecture": "choosable_vote_msg",
  "file": "conjectures/mypyvy/raft-choosable_vote_msg.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "forall T1:term. forall I:index. forall N:node. forall C:node. forall T2:term. (~((exists Q:quorum. forall N1:node. (~member(N1, Q) | (append_reply_msg(N1, T1, I, T1) | ~left_term(N1, T1))) & append_reply_msg(N, T1, I, T1) & vote_msg(C, T2, N) & ~term_le(T2, T1) & ~started(T2) & ~left_term(C, T2))) | term_at(current_log(C), I, T1))"
 },
 {
  "base": "raft",
  "conjecture": "commit_log_no_future_entries",
  "file": "conjectures/mypyvy/raft-commit_log_no_future_entries.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. forall T:term. (~term_at(commit_log, I, T) | term_le(T, commit_term))"
 },
 {
  "base": "raft",
  "conjecture": "commit_log_uses_up_to_commit_index",
  "file": "conjectures/mypyvy/raft-commit_log_uses_up_to_commit_index.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. (~committed(commit_index, commit_value) | ((~index_used(commit_log, I) & ~index_le(I, commit_index)) | (index_le(I, commit_index) & index_used(commit_log, I))))"
 },
 {
  "base": "raft",
  "conjecture": "commit_quorum",
  "file": "conjectures/mypyvy/raft-commit_quorum.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~committed(commit_index, commit_value) | forall N:node. (~member(N, commit_quorum) | append_reply_msg(N, commit_term, commit_index, commit_term)))"
 },
 {
  "base": "raft",
  "conjecture": "committed_iff_in_commit_log",
  "file": "conjectures/mypyvy/raft-committed_iff_in_commit_log.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall I:index. forall V:value. ((~committed(I, V) & ~((index_used(commit_log, I) & V = value_at(commit_log, I)))) | ((index_used(commit_log, I) & V = value_at(commit_log, I)) & committed(I, V)))"
 },
 {
  "base": "raft",
  "conjecture": "current_log_no_future_entries",
  "file": "conjectures/mypyvy/raft-current_log_no_future_entries.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall I:index. forall T:term. (~term_at(current_log(N), I, T) | (current_term(N, T) | left_term(N, T)))"
 },
 {
  "base": "raft",
  "conjecture": "current_term_partial_func",
  "file": "conjectures/mypyvy/raft-current_term_partial_func.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T1:term. forall T2:term. (~((current_term(N, T1) & current_term(N, T2))) | T1 = T2)"
 },
 {
  "base": "raft",
  "conjecture": "entries_from_term_in_term_log",
  "file": "conjectures/mypyvy/raft-entries_from_term_in_term_log.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall L:log. forall I:index. forall T:term. (~((valid(L) & term_at(L, I, T))) | (index_used(term_log(T), I) & term_at(term_log(T), I, T) & value_at(term_log(T), I) = value_at(L, I)))"
 },
 {
  "base": "raft",
  "conjecture": "index_used_downward_closed",
  "file": "conjectures/mypyvy/raft-index_used_downward_closed.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall L:log. forall I1:index. forall I2:index. (~((valid(L) & index_used(L, I1) & index_le(I2, I1))) | index_used(L, I2))"
 },
 {
  "base": "raft",
  "conjecture": "index_used_term_log_started",
  "file": "conjectures/mypyvy/raft-index_used_term_log_started.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. forall I:index. (~index_used(term_log(T), I) | started(T))"
 },
 {
  "base": "raft",
  "conjecture": "leader_started",
  "file": "conjectures/mypyvy/raft-leader_started.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. (~leader(N, T) | started(T))"
 },
 {
  "base": "raft",
  "conjecture": "leader_term_log",
  "file": "conjectures/mypyvy/raft-leader_term_log.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall T:term. (~((leader(N, T) & current_term(N, T))) | current_log(N) = term_log(T))"
 },
 {
  "base": "raft",
  "conjecture": "left_term_downward",
  "file": "conjectures/mypyvy/raft-left_term_downward.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T1:term. forall T2:term. (~((left_term(N, T1) & ~term_le(T1, T2))) | left_term(N, T2))"
 },
 {
  "base": "raft",
  "conjecture": "left_term_not_current",
  "file": "conjectures/mypyvy/raft-left_term_not_current.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. ~((left_term(N, T) & current_term(N, T)))"
 },
 {
  "base": "raft",
  "conjecture": "log_matching",
  "file": "conjectures/mypyvy/raft-log_matching.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L1:log. forall L2:log. forall I1:index. forall T1:term. forall I2:index. forall T2:term. (~((valid(L1) & valid(L2) & index_used(L1, I1) & term_at(L1, I1, T1) & index_used(L2, I1) & term_at(L2, I1, T1) & index_le(I2, I1))) | (((~term_at(L1, I2, T2) & ~term_at(L2, I2, T2)) | (term_at(L2, I2, T2) & term_at(L1, I2, T2))) & value_at(L1, I2) = value_at(L2, I2)))"
 },
 {
  "base": "raft",
  "conjecture": "lt_current_left_term",
  "file": "conjectures/mypyvy/raft-lt_current_left_term.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T1:term. forall T2:term. (~((current_term(N, T1) & ~term_le(T1, T2))) | left_term(N, T2))"
 },
 {
  "base": "raft",
  "conjecture": "no_future_leaders",
  "file": "conjectures/mypyvy/raft-no_future_leaders.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. (~leader(N, T) | (current_term(N, T) | left_term(N, T)))"
 },
 {
  "base": "raft",
  "conjecture": "one_leader_per_term",
  "file": "conjectures/mypyvy/raft-one_leader_per_term.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall T:term. forall N2:node. (~((leader(N1, T) & leader(N2, T))) | N1 = N2)"
 },
 {
  "base": "raft",
  "conjecture": "started_term_leader",
  "file": "conjectures/mypyvy/raft-started_term_leader.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. (~started(T) | leader(term_leader(T), T))"
 },
 {
  "base": "raft",
  "conjecture": "term_at_commit_term",
  "file": "conjectures/mypyvy/raft-term_at_commit_term.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~index_used(commit_log, commit_index) | term_at(commit_log, commit_index, commit_term))"
 },
 {
  "base": "raft",
  "conjecture": "term_at_index_used",
  "file": "conjectures/mypyvy/raft-term_at_index_used.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall L:log. forall I:index. forall T:term. (~((valid(L) & term_at(L, I, T))) | index_used(L, I))"
 },
 {
  "base": "raft",
  "conjecture": "term_log_no_future_entries",
  "file": "conjectures/mypyvy/raft-term_log_no_future_entries.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T2:term. forall I:index. forall T1:term. (~term_at(term_log(T2), I, T1) | term_le(T1, T2))"
 },
 {
  "base": "raft",
  "conjecture": "valid_commit_log",
  "file": "conjectures/mypyvy/raft-valid_commit_log.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "valid(commit_log)"
 },
 {
  "base": "raft",
  "conjecture": "valid_current_log",
  "file": "conjectures/mypyvy/raft-valid_current_log.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. valid(current_log(N))"
 },
 {
  "base": "raft",
  "conjecture": "valid_term_log",
  "file": "conjectures/mypyvy/raft-valid_term_log.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. valid(term_log(T))"
 },
 {
  "base": "raft",
  "conjecture": "vote_msg_partial_func",
  "file": "conjectures/mypyvy/raft-vote_msg_partial_func.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall T:term. forall N1:node. forall N3:node. (~((vote_msg(N2, T, N1) & vote_msg(N3, T, N1))) | N2 = N3)"
 },
 {
  "base": "raft",
  "conjecture": "vote_msg_voted",
  "file": "conjectures/mypyvy/raft-vote_msg_voted.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall T:term. forall N1:node. (~vote_msg(N2, T, N1) | voted(N1, T))"
 },
 {
  "base": "raft",
  "conjecture": "voters_left_term",
  "file": "conjectures/mypyvy/raft-voters_left_term.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T2:term. forall T1:term. (~((voted(N, T2) & ~term_le(T2, T1))) | left_term(N, T1))"
 },
 {
  "base": "raft",
  "conjecture": "voting_quorum_vote_msg",
  "file": "conjectures/mypyvy/raft-voting_quorum_vote_msg.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N1:node. forall T:term. (~leader(N1, T) | forall N2:node. (~member(N2, voting_quorum(T)) | vote_msg(N1, T, N2)))"
 },
 {
  "base": "ring_id",
  "conjecture": "leader_max",
  "file": "conjectures/mypyvy/ring_id-leader_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~leader(L) | le(idn(N), idn(L)))"
 },
 {
  "base": "ring_id",
  "conjecture": "leader_unique",
  "file": "conjectures/mypyvy/ring_id-leader_unique.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:node. forall Y:node. (~((leader(X) & leader(Y))) | X = Y)"
 },
 {
  "base": "ring_id",
  "conjecture": "no_bypass",
  "file": "conjectures/mypyvy/ring_id-no_bypass.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall S:node. forall D:node. forall N:node. (~((pending(idn(S), D) & btw(S, N, D))) | le(idn(N), idn(S)))"
 },
 {
  "base": "ring_id",
  "conjecture": "self_pending_max",
  "file": "conjectures/mypyvy/ring_id-self_pending_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~pending(idn(L), L) | le(idn(N), idn(L)))"
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "for_not_dead",
  "file": "conjectures/mypyvy/ring_id_not_dead-for_not_dead.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 2,
  "existentials": 2,
  "max_term_depth": 1,
  "golden_formula": "exists N:node. (forall X:node. le(idn(X), idn(N)) & (~sent(N) | leader(N) | exists M:node. pending(idn(N), M)))"
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "leader_max",
  "file": "conjectures/mypyvy/ring_id_not_dead-leader_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~leader(L) | le(idn(N), idn(L)))"
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "leader_unique",
  "file": "conjectures/mypyvy/ring_id_not_dead-leader_unique.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:node. forall Y:node. (~((leader(X) & leader(Y))) | X = Y)"
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "no_bypass",
  "file": "conjectures/mypyvy/ring_id_not_dead-no_bypass.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall S:node. forall D:node. forall N:node. (~((pending(idn(S), D) & btw(S, N, D))) | le(idn(N), idn(S)))"
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "not_dead",
  "file": "conjectures/mypyvy/ring_id_not_dead-not_dead.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 2,
  "existentials": 4,
  "max_term_depth": 0,
  "golden_formula": "(exists L:node. leader(L) | exists M:id. exists N:node. pending(M, N) | exists N:node. ~sent(N))"
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "seflf_pending_max",
  "file": "conjectures/mypyvy/ring_id_not_dead-seflf_pending_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~pending(idn(L), L) | le(idn(N), idn(L)))"
 },
 {
  "base": "sharded_kv",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/sharded_kv-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall N2:node. (~((owner(N1, K) & owner(N2, K))) | N1 = N2)"
 },
 {
  "base": "sharded_kv",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/sharded_kv-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall K:key. forall V:value. (~table(N, K, V) | owner(N, K))"
 },
 {
  "base": "sharded_kv",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/sharded_kv-c2.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall V:value. forall N2:node. ~((transfer_msg(N1, K, V) & owner(N2, K)))"
 },
 {
  "base": "sharded_kv",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/sharded_kv-c3.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall V1:value. forall N2:node. forall V2:value. (~((transfer_msg(N1, K, V1) & transfer_msg(N2, K, V2))) | (N1 = N2 & V1 = V2))"
 },
 {
  "base": "sharded_kv",
  "conjecture": "keys_unique",
  "file": "conjectures/mypyvy/sharded_kv-keys_unique.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall V1:value. forall N2:node. forall V2:value. (~((table(N1, K, V1) & table(N2, K, V2))) | (N1 = N2 & V1 = V2))"
 },
 {
  "base": "sharded_kv_no_lost_keys",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/sharded_kv_no_lost_keys-c0.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 3,
  "existentials": 4,
  "max_term_depth": 0,
  "golden_formula": "(exists N:node. exists K:key. exists V:value. transfer_msg(N, K, V) | forall K:key. exists N:node. owner(N, K))"
 },
 {
  "base": "sharded_kv_no_lost_keys",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/sharded_kv_no_lost_keys-c1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 3,
  "existentials": 3,
  "max_term_depth": 0,
  "golden_formula": "forall K:key. (exists N:node. owner(N, K) | exists N:node. exists V:value. transfer_msg(N, K, V))"
 },
 {
  "base": "ticket",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/ticket-c0.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (pc1(T) | pc2(T) | pc3(T))"
 },
 {
  "base": "ticket",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/ticket-c1.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc1(T) | ~pc2(T))"
 },
 {
  "base": "ticket",
  "conjecture": "c10",
  "file": "conjectures/mypyvy/ticket-c10.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc3(T) | m(T, service))"
 },
 {
  "base": "ticket",
  "conjecture": "c11",
  "file": "conjectures/mypyvy/ticket-c11.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "le(service, next_ticket)"
 },
 {
  "base": "ticket",
  "conjecture": "c12",
  "file": "conjectures/mypyvy/ticket-c12.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T1:thread. forall T2:thread. ~((~pc1(T1) & ~pc1(T2) & m(T1, zero) & m(T2, zero) & T1 ~= T2))"
 },
 {
  "base": "ticket",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/ticket-c2.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc1(T) | ~pc3(T))"
 },
 {
  "base": "ticket",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/ticket-c3.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc2(T) | ~pc3(T))"
 },
 {
  "base": "ticket",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/ticket-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. forall K1:ticket. forall K2:ticket. (~((m(T, K1) & m(T, K2))) | K1 = K2)"
 },
 {
  "base": "ticket",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/ticket-c5.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (next_ticket ~= zero | m(T, zero))"
 },
 {
  "base": "ticket",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/ticket-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. forall M:ticket. (~((next_ticket ~= zero & m(T, M))) | ~le(next_ticket, M))"
 },
 {
  "base": "ticket",
  "conjecture": "c7",
  "file": "conjectures/mypyvy/ticket-c7.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~((pc2(T) | pc3(T))) | next_ticket ~= zero)"
 },
 {
  "base": "ticket",
  "conjecture": "c8",
  "file": "conjectures/mypyvy/ticket-c8.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T1:thread. forall M:ticket. forall T2:thread. (~((m(T1, M) & m(T2, M) & M ~= zero)) | T1 = T2)"
 },
 {
  "base": "ticket",
  "conjecture": "c9",
  "file": "conjectures/mypyvy/ticket-c9.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. forall M:ticket. (~((pc2(T) & m(T, M))) | le(service, M))"
 },
 {
  "base": "ticket",
  "conjecture": "mutex",
  "file": "conjectures/mypyvy/ticket-mutex.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T1:thread. forall T2:thread. (~((pc3(T1) & pc3(T2))) | T1 = T2)"
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/toy_consensus_epr-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((decided(V1) & decided(V2))) | V1 = V2)"
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/toy_consensus_epr-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~vote(N, V) | voted(N))"
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/toy_consensus_epr-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((vote(N, V1) & vote(N, V2))) | V1 = V2)"
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/toy_consensus_epr-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. (~decided(V) | exists Q:quorum. forall N:node. (~member(N, Q) | vote(N, V)))"
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/toy_consensus_forall-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((decided(V1) & decided(V2))) | V1 = V2)"
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/toy_consensus_forall-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~vote(N, V) | voted(N))"
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/toy_consensus_forall-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((vote(N, V1) & vote(N, V2))) | V1 = V2)"
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/toy_consensus_forall-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. forall N:node. (~((decided(V) & member(N, voting_quorum))) | vote(N, V))"
 }
]