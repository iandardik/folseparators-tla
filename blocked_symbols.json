[
 {
  "base": "bosco_3t_safety",
  "conjecture": "agreement1",
  "file": "conjectures/mypyvy/bosco_3t_safety-agreement1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V1:value. forall V2:value. (~((~member_f(N1) & ~member_f(N2) & dec(N1, V1) & dec(N2, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg,sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "agreement2",
  "file": "conjectures/mypyvy/bosco_3t_safety-agreement2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((~member_f(N) & dec(N, V1) & und_cons_dec(V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg,sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/bosco_3t_safety-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~sent_msg(N1, N2, V) | sent_msg_proj(N1, N2))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,input,member_c,member_f,rcv_msg,rcv_msg_proj,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/bosco_3t_safety-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~rcv_msg(N1, N2, V) | rcv_msg_proj(N1, N2))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg,sent_msg_proj,input,member_c,member_f,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/bosco_3t_safety-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~((~member_f(N1) & ~member_f(N2) & sent_msg(N1, N2, V) & rcv_msg_proj(N1, N2))) | rcv_msg(N1, N2, V))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg_proj,input,member_c,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/bosco_3t_safety-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. forall V:value. (~(~member_f(N1)) | ((~sent_msg(N1, N2, V) & ~input(N1, V)) | (input(N1, V) & sent_msg(N1, N2, V))))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg_proj,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/bosco_3t_safety-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((~member_f(N) & und_cons(N, V1) & und_cons(N, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=member_b,done,sent_msg,sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/bosco_3t_safety-c5.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~((~member_f(N) & und_cons(N, V))) | done(N))",
  "extra": [
   "--blocked-symbols=member_b,sent_msg,sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/bosco_3t_safety-c6.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall N1:node. forall V:value. (~((~member_f(N2) & rcv_msg(N1, N2, V))) | sent_msg(N1, N2, V))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg_proj,input,member_c,rcv_msg_proj,und_cons_dec,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c7",
  "file": "conjectures/mypyvy/bosco_3t_safety-c7.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~((~member_f(N) & dec(N, V))) | exists B:quorum_b. forall M:node. (~((member_b(M, B) & ~member_f(M))) | sent_msg(M, M, V)))",
  "extra": [
   "--blocked-symbols=done,und_cons,sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,member_a"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c8",
  "file": "conjectures/mypyvy/bosco_3t_safety-c8.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~((~member_f(N) & done(N) & ~und_cons(N, V))) | ~(exists B:quorum_b. forall M:node. (~((member_b(M, B) & ~member_f(M))) | sent_msg(M, M, V))))",
  "extra": [
   "--blocked-symbols=sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,dec,member_a"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "c9",
  "file": "conjectures/mypyvy/bosco_3t_safety-c9.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 4,
  "existentials": 5,
  "max_term_depth": 0,
  "golden_formula": "(forall V:value. (~und_cons_dec(V) | exists N:node. (~member_f(N) & und_cons(N, V))) | exists N1:node. exists N2:node. exists V1:value. exists V2:value. (~member_f(N1) & ~member_f(N2) & und_cons(N1, V1) & und_cons(N2, V2) & V1 ~= V2))",
  "extra": [
   "--blocked-symbols=member_b,done,sent_msg,sent_msg_proj,input,member_c,rcv_msg,rcv_msg_proj,dec,member_a"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "validity1",
  "file": "conjectures/mypyvy/bosco_3t_safety-validity1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((forall N:node. (~(~member_f(N)) | input(N, V1)) & V1 ~= V2)) | forall M:node. (~(~member_f(M)) | ~dec(M, V2)))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg,sent_msg_proj,member_c,rcv_msg,rcv_msg_proj,und_cons_dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "bosco_3t_safety",
  "conjecture": "validity2",
  "file": "conjectures/mypyvy/bosco_3t_safety-validity2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((forall N:node. (~(~member_f(N)) | input(N, V1)) & V1 ~= V2)) | ~und_cons_dec(V2))",
  "extra": [
   "--blocked-symbols=member_b,done,und_cons,sent_msg,sent_msg_proj,member_c,rcv_msg,rcv_msg_proj,dec,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "client_server_ae",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/client_server_ae-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_received(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))",
  "extra": [
   "--blocked-symbols=response_sent"
  ]
 },
 {
  "base": "client_server_ae",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/client_server_ae-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_sent(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))",
  "extra": [
   "--blocked-symbols=response_received"
  ]
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/client_server_db_ae-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_received(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))",
  "extra": [
   "--blocked-symbols=db_request_sent,db_response_sent,response_sent,t"
  ]
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/client_server_db_ae-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall P:response. (~response_sent(N, P) | exists R:request. (request_sent(N, R) & match(R, P)))",
  "extra": [
   "--blocked-symbols=db_request_sent,db_response_sent,response_received,t"
  ]
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/client_server_db_ae-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall I:db_request_id. forall R:request. (~db_request_sent(I, R) | exists N:node. (t(I, N) & request_sent(N, R)))",
  "extra": [
   "--blocked-symbols=db_response_sent,response_received,match,response_sent"
  ]
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/client_server_db_ae-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall I:db_request_id. forall P:response. (~db_response_sent(I, P) | exists R:request. (db_request_sent(I, R) & match(R, P)))",
  "extra": [
   "--blocked-symbols=t,request_sent,response_received,response_sent"
  ]
 },
 {
  "base": "client_server_db_ae",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/client_server_db_ae-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:db_request_id. forall N1:node. forall N2:node. (~((t(I, N1) & t(I, N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=db_request_sent,response_received,db_response_sent,response_sent,match,request_sent",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/consensus_epr-c0.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall V1:value. forall N2:node. forall V2:value. (~((decided(N1, V1) & decided(N2, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,leader,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/consensus_epr-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((leader(N1) & leader(N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,member,decided,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/consensus_epr-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~votes(N, N1) | vote_msg(N1, N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,leader,member,voted,decided",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/consensus_epr-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. forall N2:node. (~((vote_msg(N, N1) & vote_msg(N, N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,leader,member,decided,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/consensus_epr-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~vote_msg(N, N1) | voted(N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,leader,member,decided",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/consensus_epr-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "exists Q:quorum. forall N:node. forall M:node. (~((leader(N) & member(M, Q))) | votes(N, M))",
  "extra": [
   "--blocked-symbols=vote_msg,vote_request_msg,decided,voted"
  ]
 },
 {
  "base": "consensus_epr",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/consensus_epr-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~decided(N, V) | leader(N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/consensus_forall-c0.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall V1:value. forall N2:node. forall V2:value. (~((decided(N1, V1) & decided(N2, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,voting_quorum,leader,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/consensus_forall-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((leader(N1) & leader(N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,voting_quorum,member,decided,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/consensus_forall-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~votes(N, N1) | vote_msg(N1, N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,voting_quorum,leader,member,decided,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/consensus_forall-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. forall N2:node. (~((vote_msg(N, N1) & vote_msg(N, N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,voting_quorum,leader,member,decided,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/consensus_forall-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~vote_msg(N, N1) | voted(N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,voting_quorum,leader,member,decided",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/consensus_forall-c5.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~((leader(N) & member(N1, voting_quorum))) | votes(N, N1))",
  "extra": [
   "--blocked-symbols=vote_msg,vote_request_msg,decided,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_forall",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/consensus_forall-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~decided(N, V) | leader(N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,voting_quorum,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/consensus_wo_decide-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((leader(N1) & leader(N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,vote_msg,voting_quorum,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/consensus_wo_decide-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~votes(N, N1) | vote_msg(N1, N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,voting_quorum,leader,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/consensus_wo_decide-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. forall N2:node. (~((vote_msg(N, N1) & vote_msg(N, N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,voting_quorum,leader,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/consensus_wo_decide-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~vote_msg(N, N1) | voted(N))",
  "extra": [
   "--blocked-symbols=vote_request_msg,votes,voting_quorum,leader,member",
   "--logic=universal"
  ]
 },
 {
  "base": "consensus_wo_decide",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/consensus_wo_decide-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall N1:node. (~((leader(N) & member(N1, voting_quorum))) | votes(N, N1))",
  "extra": [
   "--blocked-symbols=vote_msg,vote_request_msg,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "firewall",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/firewall-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall S:node. forall D:node. (~((sent(S, D) & internal(D))) | exists I:node. (internal(I) & sent(I, S)))",
  "extra": [
   "--blocked-symbols=allowed_in"
  ]
 },
 {
  "base": "firewall",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/firewall-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall D:node. (~allowed_in(D) | exists I:node. (internal(I) & sent(I, D)))",
  "extra": [
   "--blocked-symbols="
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. (~sent_msg_proj(N1) | exists N2:node. sent_msg(N1, N2))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,accept,member_fi,member_fs,rcv_msg,rcv_init,member_fa,member_a"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~sent_msg(N1, N2) | sent_msg_proj(N1))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,accept,member_fi,member_fs,rcv_msg,rcv_init,member_fa,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall N1:node. (~((~member_fs(N2) & ~member_fa(N2) & rcv_msg(N1, N2))) | sent_msg(N1, N2))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,accept,sent_msg_proj,member_fi,rcv_init,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((~member_fi(N1) & ~member_fa(N1) & sent_msg_proj(N1))) | sent_msg(N1, N2))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,accept,member_fs,rcv_msg,rcv_init,member_a",
   "--logic=universal"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c4.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((~member_fs(N1) & ~member_fa(N1) & sent_msg(N1, N2) & ~rcv_init(N1))) | exists A:quorum_a. forall M:node. (~member_a(M, A) | sent_msg_proj(M)))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,accept,member_fi,rcv_msg"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. (~((~member_fs(N1) & ~member_fa(N1) & accept(N1))) | exists B:quorum_b. forall M:node. (~member_b(M, B) | sent_msg_proj(M)))",
  "extra": [
   "--blocked-symbols=member_fc,sent_msg,member_fi,rcv_msg,rcv_init,member_a"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-c6.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 2,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "(~(exists A:quorum_a. forall M:node. (~((member_a(M, A) & ~member_fs(M) & ~member_fa(M))) | sent_msg_proj(M))) | exists N:node. (~member_fs(N) & ~member_fa(N) & rcv_init(N)))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,accept,sent_msg,member_fi,rcv_msg"
  ]
 },
 {
  "base": "hybrid_reliable_broadcast_cisa",
  "conjecture": "unforgebility",
  "file": "conjectures/mypyvy/hybrid_reliable_broadcast_cisa-unforgebility.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 1,
  "existentials": 2,
  "max_term_depth": 0,
  "golden_formula": "(~(exists N:node. (~member_fs(N) & ~member_fa(N) & accept(N))) | exists M:node. (~member_fs(M) & ~member_fa(M) & rcv_init(M)))",
  "extra": [
   "--blocked-symbols=member_b,member_fc,sent_msg,sent_msg_proj,member_fi,rcv_msg,member_a"
  ]
 },
 {
  "base": "learning_switch",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/learning_switch-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. table(T, X, X)",
  "extra": [
   "--blocked-symbols=pending",
   "--logic=universal"
  ]
 },
 {
  "base": "learning_switch",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/learning_switch-c1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. forall Z:node. (~((table(T, X, Y) & table(T, Y, Z))) | table(T, X, Z))",
  "extra": [
   "--blocked-symbols=pending",
   "--logic=universal"
  ]
 },
 {
  "base": "learning_switch",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/learning_switch-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. (~((table(T, X, Y) & table(T, Y, X))) | X = Y)",
  "extra": [
   "--blocked-symbols=pending",
   "--logic=universal"
  ]
 },
 {
  "base": "learning_switch",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/learning_switch-c3.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. forall Z:node. (~((table(T, X, Y) & table(T, X, Z))) | (table(T, Y, Z) | table(T, Z, Y)))",
  "extra": [
   "--blocked-symbols=pending",
   "--logic=universal"
  ]
 },
 {
  "base": "learning_switch",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/learning_switch-c4.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall PS:node. forall PD:node. forall S:node. forall D:node. (~((pending(PS, PD, S, D) & PS ~= S)) | table(PS, S, PS))",
  "extra": [
   "--blocked-symbols=",
   "--logic=universal"
  ]
 },
 {
  "base": "learning_switch",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/learning_switch-c5.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:node. forall X:node. forall Y:node. (~((table(T, X, Y) & T ~= Y & X ~= Y)) | table(T, Y, T))",
  "extra": [
   "--blocked-symbols=pending",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/lockserv-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((grant_msg(N1) & grant_msg(N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=holds_lock,unlock_msg,server_holds_lock,lock_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/lockserv-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((unlock_msg(N1) & unlock_msg(N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=holds_lock,server_holds_lock,lock_msg,grant_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/lockserv-c2.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. ~((holds_lock(N1) & grant_msg(N2)))",
  "extra": [
   "--blocked-symbols=unlock_msg,server_holds_lock,lock_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/lockserv-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. ~((holds_lock(N1) & unlock_msg(N2)))",
  "extra": [
   "--blocked-symbols=server_holds_lock,lock_msg,grant_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/lockserv-c4.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. ~((grant_msg(N1) & unlock_msg(N2)))",
  "extra": [
   "--blocked-symbols=holds_lock,server_holds_lock,lock_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/lockserv-c5.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. ~((grant_msg(N) & server_holds_lock()))",
  "extra": [
   "--blocked-symbols=holds_lock,unlock_msg,lock_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/lockserv-c6.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. ~((holds_lock(N) & server_holds_lock()))",
  "extra": [
   "--blocked-symbols=unlock_msg,lock_msg,grant_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "c7",
  "file": "conjectures/mypyvy/lockserv-c7.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. ~((unlock_msg(N) & server_holds_lock()))",
  "extra": [
   "--blocked-symbols=holds_lock,lock_msg,grant_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "lockserv",
  "conjecture": "mutex",
  "file": "conjectures/mypyvy/lockserv-mutex.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall N2:node. (~((holds_lock(N1) & holds_lock(N2))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=unlock_msg,server_holds_lock,lock_msg,grant_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "paxos_epr",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/paxos_epr-c0.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall V1:value. forall R2:round. forall V2:value. (~((decision(R1, V1) & decision(R2, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=one_b,vote,one_a,member,proposal,none,left_round,le",
   "--logic=universal"
  ]
 },
 {
  "base": "paxos_epr",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/paxos_epr-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V1:value. forall V2:value. (~((proposal(R, V1) & proposal(R, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=decision,one_b,vote,one_a,member,none,left_round,le",
   "--logic=universal"
  ]
 },
 {
  "base": "paxos_epr",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/paxos_epr-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R:round. forall V:value. (~vote(N, R, V) | proposal(R, V))",
  "extra": [
   "--blocked-symbols=decision,one_b,one_a,member,none,left_round,le",
   "--logic=universal"
  ]
 },
 {
  "base": "paxos_epr",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/paxos_epr-c3.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R:round. forall V:value. (~decision(R, V) | exists Q:quorum. forall N:node. (~member(N, Q) | vote(N, R, V)))",
  "extra": [
   "--blocked-symbols=one_b,one_a,proposal,none,left_round,le"
  ]
 },
 {
  "base": "paxos_epr",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/paxos_epr-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall R2:round. forall R1:round. (~((one_b(N, R2) & ~le(R2, R1))) | left_round(N, R1))",
  "extra": [
   "--blocked-symbols=decision,vote,one_a,member,proposal,none",
   "--logic=universal"
  ]
 },
 {
  "base": "paxos_epr",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/paxos_epr-c5.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall R1:round. forall R2:round. forall V1:value. forall V2:value. forall Q:quorum. (~((~le(R2, R1) & proposal(R2, V2) & V1 ~= V2)) | exists N:node. (member(N, Q) & left_round(N, R1) & ~vote(N, R1, V1)))",
  "extra": [
   "--blocked-symbols=none,decision,one_a,one_b"
  ]
 },
 {
  "base": "raft",
  "conjecture": "AER_term_log",
  "file": "conjectures/mypyvy/raft-AER_term_log.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall T:term. forall EI:index. forall ET:term. (~append_reply_msg(N, T, EI, ET) | term_at(term_log(T), EI, ET))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,value_at,left_term,voting_quorum,leader,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "AE_none_means_init",
  "file": "conjectures/mypyvy/raft-AE_none_means_init.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:term. forall OPI:option_index. forall OPT:option_term. forall EI:index. forall ET:term. forall EV:value. (~((append_msg(T, OPI, OPT, EI, ET, EV) & is_none_index(OPI))) | EI = index_zero)",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "AE_option_wf",
  "file": "conjectures/mypyvy/raft-AE_option_wf.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:term. forall OPI:option_index. forall OPT:option_term. forall EI:index. forall ET:term. forall EV:value. (~append_msg(T, OPI, OPT, EI, ET, EV) | ((~is_none_index(OPI) & ~is_none_term(OPT)) | (is_none_term(OPT) & is_none_index(OPI))))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,vote_msg,index_used,commit_index,valid,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "AE_prev_term_log",
  "file": "conjectures/mypyvy/raft-AE_prev_term_log.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. forall PLI:option_index. forall PLT:option_term. forall EI:index. forall ET:term. forall EV:value. (~((append_msg(T, PLI, PLT, EI, ET, EV) & ~is_none_index(PLI))) | term_at(term_log(T), oi_index(PLI), ot_term(PLT)))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "AE_some_succ",
  "file": "conjectures/mypyvy/raft-AE_some_succ.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. forall OPI:option_index. forall OPT:option_term. forall EI:index. forall ET:term. forall EV:value. (~((append_msg(T, OPI, OPT, EI, ET, EV) & ~is_none_index(OPI))) | (~index_le(EI, oi_index(OPI)) & forall I:index. (~(~index_le(EI, I)) | index_le(I, oi_index(OPI)))))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,term_zero,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "AE_term_log",
  "file": "conjectures/mypyvy/raft-AE_term_log.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall T:term. forall PLI:option_index. forall PLT:option_term. forall EI:index. forall ET:term. forall EV:value. (~append_msg(T, PLI, PLT, EI, ET, EV) | (term_at(term_log(T), EI, ET) & EV = value_at(term_log(T), EI)))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,ot_term,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "CI_zero_until_commit",
  "file": "conjectures/mypyvy/raft-CI_zero_until_commit.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~(commit_index ~= index_zero) | committed(commit_index, commit_value))",
  "extra": [
   "--blocked-symbols=log0,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "RV_none_index_not_used",
  "file": "conjectures/mypyvy/raft-RV_none_index_not_used.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. forall I:index. (~((request_vote_msg(C, T, OLI, OLT) & is_none_index(OLI) & ~left_term(C, T) & ~started(T))) | ~index_used(current_log(C), I))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,index_zero,committed,term_le,commit_term,member,none_term,is_none_term,vote_msg,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,commit_quorum,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "RV_option_wf",
  "file": "conjectures/mypyvy/raft-RV_option_wf.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. forall OLI:option_index. forall OLT:option_term. (~request_vote_msg(N, T, OLI, OLT) | ((~is_none_index(OLI) & ~is_none_term(OLT)) | (is_none_term(OLT) & is_none_index(OLI))))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,commit_quorum,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "RV_partial_func",
  "file": "conjectures/mypyvy/raft-RV_partial_func.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:node. forall T:term. forall OLI1:option_index. forall OLT1:option_term. forall OLI2:option_index. forall OLT2:option_term. (~((request_vote_msg(C, T, OLI1, OLT1) & request_vote_msg(C, T, OLI2, OLT2))) | (OLI1 = OLI2 & OLT1 = OLT2))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "RV_some_index_no_bigger",
  "file": "conjectures/mypyvy/raft-RV_some_index_no_bigger.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. forall I:index. (~((request_vote_msg(C, T, OLI, OLT) & ~is_none_index(OLI) & ~left_term(C, T) & ~started(T) & ~index_le(I, oi_index(OLI)))) | ~index_used(current_log(C), I))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,index_zero,committed,term_le,commit_term,member,none_term,is_none_term,vote_msg,commit_index,valid,ot_term,append_msg,term_at,value_at,voting_quorum,leader,append_reply_msg,term_zero,commit_quorum,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "RV_some_index_term_at",
  "file": "conjectures/mypyvy/raft-RV_some_index_term_at.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. (~((request_vote_msg(C, T, OLI, OLT) & ~is_none_index(OLI) & ~left_term(C, T) & ~started(T))) | term_at(current_log(C), oi_index(OLI), ot_term(OLT)))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,index_zero,committed,term_le,commit_term,member,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,commit_quorum,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "RV_term",
  "file": "conjectures/mypyvy/raft-RV_term.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall C:node. forall T:term. forall OLI:option_index. forall OLT:option_term. (~request_vote_msg(C, T, OLI, OLT) | (current_term(C, T) | left_term(C, T)))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "any_committed_commit_index_committed",
  "file": "conjectures/mypyvy/raft-any_committed_commit_index_committed.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. forall V:value. (~committed(I, V) | committed(commit_index, commit_value))",
  "extra": [
   "--blocked-symbols=log0,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/raft-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. forall V1:value. forall V2:value. (~((committed(I, V1) & committed(I, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "choosable_AER_current_log",
  "file": "conjectures/mypyvy/raft-choosable_AER_current_log.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "forall T1:term. forall I:index. forall N:node. (~((exists Q:quorum. forall N1:node. (~member(N1, Q) | (append_reply_msg(N1, T1, I, T1) | ~left_term(N1, T1))) & append_reply_msg(N, T1, I, T1))) | term_at(current_log(N), I, T1))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,index_zero,committed,started,term_le,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,value_at,voting_quorum,leader,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg"
  ]
 },
 {
  "base": "raft",
  "conjecture": "choosable_future_term_log",
  "file": "conjectures/mypyvy/raft-choosable_future_term_log.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "forall T1:term. forall I:index. forall T2:term. (~((term_at(term_log(T1), I, T1) & exists Q:quorum. forall N:node. (~member(N, Q) | (append_reply_msg(N, T1, I, T1) | ~left_term(N, T1))) & started(T2) & term_le(T1, T2))) | term_at(term_log(T2), I, T1))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,ot_term,append_msg,value_at,voting_quorum,leader,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg"
  ]
 },
 {
  "base": "raft",
  "conjecture": "choosable_vote_msg",
  "file": "conjectures/mypyvy/raft-choosable_vote_msg.fol",
  "quantifiers": 7,
  "max_quantifier_depth": 7,
  "existentials": 1,
  "max_term_depth": 1,
  "golden_formula": "forall T1:term. forall I:index. forall N:node. forall C:node. forall T2:term. (~((exists Q:quorum. forall N1:node. (~member(N1, Q) | (append_reply_msg(N1, T1, I, T1) | ~left_term(N1, T1))) & append_reply_msg(N, T1, I, T1) & vote_msg(C, T2, N) & ~term_le(T2, T1) & ~started(T2) & ~left_term(C, T2))) | term_at(current_log(C), I, T1))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,index_zero,committed,commit_term,none_term,is_none_term,index_used,commit_index,valid,ot_term,append_msg,value_at,voting_quorum,leader,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg"
  ]
 },
 {
  "base": "raft",
  "conjecture": "commit_log_no_future_entries",
  "file": "conjectures/mypyvy/raft-commit_log_no_future_entries.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. forall T:term. (~term_at(commit_log, I, T) | term_le(T, commit_term))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,oi_index,current_log,index_zero,committed,started,member,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "commit_log_uses_up_to_commit_index",
  "file": "conjectures/mypyvy/raft-commit_log_uses_up_to_commit_index.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall I:index. (~committed(commit_index, commit_value) | ((~index_used(commit_log, I) & ~index_le(I, commit_index)) | (index_le(I, commit_index) & index_used(commit_log, I))))",
  "extra": [
   "--blocked-symbols=log0,term_log,none_index,term_leader,current_term,oi_index,current_log,index_zero,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "commit_quorum",
  "file": "conjectures/mypyvy/raft-commit_quorum.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~committed(commit_index, commit_value) | forall N:node. (~member(N, commit_quorum) | append_reply_msg(N, commit_term, commit_index, commit_term)))",
  "extra": [
   "--blocked-symbols=log0,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,started,term_le,none_term,is_none_term,vote_msg,index_used,valid,ot_term,append_msg,term_at,value_at,left_term,voting_quorum,leader,index_le,term_zero,is_none_index,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "committed_iff_in_commit_log",
  "file": "conjectures/mypyvy/raft-committed_iff_in_commit_log.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall I:index. forall V:value. ((~committed(I, V) & ~((index_used(commit_log, I) & V = value_at(commit_log, I)))) | ((index_used(commit_log, I) & V = value_at(commit_log, I)) & committed(I, V)))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,oi_index,current_log,index_zero,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,commit_index,valid,append_msg,ot_term,term_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "current_log_no_future_entries",
  "file": "conjectures/mypyvy/raft-current_log_no_future_entries.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall I:index. forall T:term. (~term_at(current_log(N), I, T) | (current_term(N, T) | left_term(N, T)))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,commit_log,oi_index,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "current_term_partial_func",
  "file": "conjectures/mypyvy/raft-current_term_partial_func.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T1:term. forall T2:term. (~((current_term(N, T1) & current_term(N, T2))) | T1 = T2)",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "entries_from_term_in_term_log",
  "file": "conjectures/mypyvy/raft-entries_from_term_in_term_log.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 2,
  "golden_formula": "forall L:log. forall I:index. forall T:term. (~((valid(L) & term_at(L, I, T))) | (index_used(term_log(T), I) & term_at(term_log(T), I, T) & value_at(term_log(T), I) = value_at(L, I)))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,commit_index,append_msg,ot_term,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "index_used_downward_closed",
  "file": "conjectures/mypyvy/raft-index_used_downward_closed.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall L:log. forall I1:index. forall I2:index. (~((valid(L) & index_used(L, I1) & index_le(I2, I1))) | index_used(L, I2))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,commit_index,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "index_used_term_log_started",
  "file": "conjectures/mypyvy/raft-index_used_term_log_started.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. forall I:index. (~index_used(term_log(T), I) | started(T))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,term_le,member,commit_term,none_term,is_none_term,vote_msg,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "leader_started",
  "file": "conjectures/mypyvy/raft-leader_started.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. (~leader(N, T) | started(T))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "leader_term_log",
  "file": "conjectures/mypyvy/raft-leader_term_log.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. forall T:term. (~((leader(N, T) & current_term(N, T))) | current_log(N) = term_log(T))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,commit_log,oi_index,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "left_term_downward",
  "file": "conjectures/mypyvy/raft-left_term_downward.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T1:term. forall T2:term. (~((left_term(N, T1) & ~term_le(T1, T2))) | left_term(N, T2))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "left_term_not_current",
  "file": "conjectures/mypyvy/raft-left_term_not_current.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. ~((left_term(N, T) & current_term(N, T)))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "log_matching",
  "file": "conjectures/mypyvy/raft-log_matching.fol",
  "quantifiers": 6,
  "max_quantifier_depth": 6,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L1:log. forall L2:log. forall I1:index. forall T1:term. forall I2:index. forall T2:term. (~((valid(L1) & valid(L2) & index_used(L1, I1) & term_at(L1, I1, T1) & index_used(L2, I1) & term_at(L2, I1, T1) & index_le(I2, I1))) | (((~term_at(L1, I2, T2) & ~term_at(L2, I2, T2)) | (term_at(L2, I2, T2) & term_at(L1, I2, T2))) & value_at(L1, I2) = value_at(L2, I2)))",
  "extra": [
   "--blocked-symbols=log0,commit_value,term_log,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,commit_index,append_msg,ot_term,left_term,voting_quorum,leader,append_reply_msg,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "lt_current_left_term",
  "file": "conjectures/mypyvy/raft-lt_current_left_term.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T1:term. forall T2:term. (~((current_term(N, T1) & ~term_le(T1, T2))) | left_term(N, T2))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,commit_log,oi_index,current_log,index_zero,committed,started,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "no_future_leaders",
  "file": "conjectures/mypyvy/raft-no_future_leaders.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T:term. (~leader(N, T) | (current_term(N, T) | left_term(N, T)))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "one_leader_per_term",
  "file": "conjectures/mypyvy/raft-one_leader_per_term.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall T:term. forall N2:node. (~((leader(N1, T) & leader(N2, T))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "started_term_leader",
  "file": "conjectures/mypyvy/raft-started_term_leader.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. (~started(T) | leader(term_leader(T), T))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,current_term,commit_log,oi_index,current_log,index_zero,committed,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "term_at_commit_term",
  "file": "conjectures/mypyvy/raft-term_at_commit_term.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "(~index_used(commit_log, commit_index) | term_at(commit_log, commit_index, commit_term))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,oi_index,current_log,index_zero,committed,started,term_le,member,none_term,is_none_term,vote_msg,valid,append_msg,ot_term,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "term_at_index_used",
  "file": "conjectures/mypyvy/raft-term_at_index_used.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall L:log. forall I:index. forall T:term. (~((valid(L) & term_at(L, I, T))) | index_used(L, I))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,commit_index,append_msg,ot_term,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "term_log_no_future_entries",
  "file": "conjectures/mypyvy/raft-term_log_no_future_entries.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T2:term. forall I:index. forall T1:term. (~term_at(term_log(T2), I, T1) | term_le(T1, T2))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "valid_commit_log",
  "file": "conjectures/mypyvy/raft-valid_commit_log.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "valid(commit_log)",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "valid_current_log",
  "file": "conjectures/mypyvy/raft-valid_current_log.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N:node. valid(current_log(N))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "valid_term_log",
  "file": "conjectures/mypyvy/raft-valid_term_log.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall T:term. valid(term_log(T))",
  "extra": [
   "--blocked-symbols=log0,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "vote_msg_partial_func",
  "file": "conjectures/mypyvy/raft-vote_msg_partial_func.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall T:term. forall N1:node. forall N3:node. (~((vote_msg(N2, T, N1) & vote_msg(N3, T, N1))) | N2 = N3)",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "vote_msg_voted",
  "file": "conjectures/mypyvy/raft-vote_msg_voted.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N2:node. forall T:term. forall N1:node. (~vote_msg(N2, T, N1) | voted(N1, T))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,member,commit_term,none_term,is_none_term,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "voters_left_term",
  "file": "conjectures/mypyvy/raft-voters_left_term.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall T2:term. forall T1:term. (~((voted(N, T2) & ~term_le(T2, T1))) | left_term(N, T1))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,member,commit_term,none_term,is_none_term,vote_msg,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,voting_quorum,leader,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "raft",
  "conjecture": "voting_quorum_vote_msg",
  "file": "conjectures/mypyvy/raft-voting_quorum_vote_msg.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall N1:node. forall T:term. (~leader(N1, T) | forall N2:node. (~member(N2, voting_quorum(T)) | vote_msg(N1, T, N2)))",
  "extra": [
   "--blocked-symbols=log0,term_log,commit_value,none_index,term_leader,current_term,commit_log,oi_index,current_log,index_zero,committed,started,term_le,commit_term,none_term,is_none_term,index_used,commit_index,valid,append_msg,ot_term,term_at,value_at,left_term,append_reply_msg,index_le,term_zero,is_none_index,commit_quorum,voted,request_vote_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id",
  "conjecture": "leader_max",
  "file": "conjectures/mypyvy/ring_id-leader_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~leader(L) | le(idn(N), idn(L)))",
  "extra": [
   "--blocked-symbols=pending,btw",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id",
  "conjecture": "leader_unique",
  "file": "conjectures/mypyvy/ring_id-leader_unique.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:node. forall Y:node. (~((leader(X) & leader(Y))) | X = Y)",
  "extra": [
   "--blocked-symbols=pending,btw,le,idn",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id",
  "conjecture": "no_bypass",
  "file": "conjectures/mypyvy/ring_id-no_bypass.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall S:node. forall D:node. forall N:node. (~((pending(idn(S), D) & btw(S, N, D))) | le(idn(N), idn(S)))",
  "extra": [
   "--blocked-symbols=leader",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id",
  "conjecture": "self_pending_max",
  "file": "conjectures/mypyvy/ring_id-self_pending_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~pending(idn(L), L) | le(idn(N), idn(L)))",
  "extra": [
   "--blocked-symbols=leader,btw",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "for_not_dead",
  "file": "conjectures/mypyvy/ring_id_not_dead-for_not_dead.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 2,
  "existentials": 2,
  "max_term_depth": 1,
  "golden_formula": "exists N:node. (forall X:node. le(idn(X), idn(N)) & (~sent(N) | leader(N) | exists M:node. pending(idn(N), M)))",
  "extra": [
   "--blocked-symbols=btw"
  ]
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "leader_max",
  "file": "conjectures/mypyvy/ring_id_not_dead-leader_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~leader(L) | le(idn(N), idn(L)))",
  "extra": [
   "--blocked-symbols=pending,btw,sent",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "leader_unique",
  "file": "conjectures/mypyvy/ring_id_not_dead-leader_unique.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall X:node. forall Y:node. (~((leader(X) & leader(Y))) | X = Y)",
  "extra": [
   "--blocked-symbols=btw,idn,pending,le,sent",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "no_bypass",
  "file": "conjectures/mypyvy/ring_id_not_dead-no_bypass.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall S:node. forall D:node. forall N:node. (~((pending(idn(S), D) & btw(S, N, D))) | le(idn(N), idn(S)))",
  "extra": [
   "--blocked-symbols=leader,sent",
   "--logic=universal"
  ]
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "not_dead",
  "file": "conjectures/mypyvy/ring_id_not_dead-not_dead.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 2,
  "existentials": 4,
  "max_term_depth": 0,
  "golden_formula": "(exists L:node. leader(L) | exists M:id. exists N:node. pending(M, N) | exists N:node. ~sent(N))",
  "extra": [
   "--blocked-symbols=btw,le,idn"
  ]
 },
 {
  "base": "ring_id_not_dead",
  "conjecture": "seflf_pending_max",
  "file": "conjectures/mypyvy/ring_id_not_dead-seflf_pending_max.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 1,
  "golden_formula": "forall L:node. forall N:node. (~pending(idn(L), L) | le(idn(N), idn(L)))",
  "extra": [
   "--blocked-symbols=leader,btw,sent",
   "--logic=universal"
  ]
 },
 {
  "base": "sharded_kv",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/sharded_kv-c0.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall N2:node. (~((owner(N1, K) & owner(N2, K))) | N1 = N2)",
  "extra": [
   "--blocked-symbols=transfer_msg,table",
   "--logic=universal"
  ]
 },
 {
  "base": "sharded_kv",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/sharded_kv-c1.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall K:key. forall V:value. (~table(N, K, V) | owner(N, K))",
  "extra": [
   "--blocked-symbols=transfer_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "sharded_kv",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/sharded_kv-c2.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 4,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall V:value. forall N2:node. ~((transfer_msg(N1, K, V) & owner(N2, K)))",
  "extra": [
   "--blocked-symbols=table",
   "--logic=universal"
  ]
 },
 {
  "base": "sharded_kv",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/sharded_kv-c3.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall V1:value. forall N2:node. forall V2:value. (~((transfer_msg(N1, K, V1) & transfer_msg(N2, K, V2))) | (N1 = N2 & V1 = V2))",
  "extra": [
   "--blocked-symbols=owner,table",
   "--logic=universal"
  ]
 },
 {
  "base": "sharded_kv",
  "conjecture": "keys_unique",
  "file": "conjectures/mypyvy/sharded_kv-keys_unique.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 5,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N1:node. forall K:key. forall V1:value. forall N2:node. forall V2:value. (~((table(N1, K, V1) & table(N2, K, V2))) | (N1 = N2 & V1 = V2))",
  "extra": [
   "--blocked-symbols=owner,transfer_msg",
   "--logic=universal"
  ]
 },
 {
  "base": "sharded_kv_no_lost_keys",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/sharded_kv_no_lost_keys-c0.fol",
  "quantifiers": 5,
  "max_quantifier_depth": 3,
  "existentials": 4,
  "max_term_depth": 0,
  "golden_formula": "(exists N:node. exists K:key. exists V:value. transfer_msg(N, K, V) | forall K:key. exists N:node. owner(N, K))",
  "extra": [
   "--blocked-symbols=table"
  ]
 },
 {
  "base": "sharded_kv_no_lost_keys",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/sharded_kv_no_lost_keys-c1.fol",
  "quantifiers": 4,
  "max_quantifier_depth": 3,
  "existentials": 3,
  "max_term_depth": 0,
  "golden_formula": "forall K:key. (exists N:node. owner(N, K) | exists N:node. exists V:value. transfer_msg(N, K, V))",
  "extra": [
   "--blocked-symbols=table"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/ticket-c0.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (pc1(T) | pc2(T) | pc3(T))",
  "extra": [
   "--blocked-symbols=next_ticket,m,zero,service,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/ticket-c1.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc1(T) | ~pc2(T))",
  "extra": [
   "--blocked-symbols=next_ticket,m,zero,service,pc3,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c10",
  "file": "conjectures/mypyvy/ticket-c10.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc3(T) | m(T, service))",
  "extra": [
   "--blocked-symbols=pc1,next_ticket,pc2,zero,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c11",
  "file": "conjectures/mypyvy/ticket-c11.fol",
  "quantifiers": 0,
  "max_quantifier_depth": 0,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "le(service, next_ticket)",
  "extra": [
   "--blocked-symbols=pc1,pc2,m,zero,pc3",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c12",
  "file": "conjectures/mypyvy/ticket-c12.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T1:thread. forall T2:thread. ~((~pc1(T1) & ~pc1(T2) & m(T1, zero) & m(T2, zero) & T1 ~= T2))",
  "extra": [
   "--blocked-symbols=next_ticket,pc2,service,pc3,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/ticket-c2.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc1(T) | ~pc3(T))",
  "extra": [
   "--blocked-symbols=next_ticket,pc2,m,zero,service,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/ticket-c3.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~pc2(T) | ~pc3(T))",
  "extra": [
   "--blocked-symbols=pc1,next_ticket,m,zero,service,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c4",
  "file": "conjectures/mypyvy/ticket-c4.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. forall K1:ticket. forall K2:ticket. (~((m(T, K1) & m(T, K2))) | K1 = K2)",
  "extra": [
   "--blocked-symbols=pc1,next_ticket,pc2,zero,service,pc3,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c5",
  "file": "conjectures/mypyvy/ticket-c5.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (next_ticket ~= zero | m(T, zero))",
  "extra": [
   "--blocked-symbols=pc1,pc2,service,pc3,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c6",
  "file": "conjectures/mypyvy/ticket-c6.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. forall M:ticket. (~((next_ticket ~= zero & m(T, M))) | ~le(next_ticket, M))",
  "extra": [
   "--blocked-symbols=pc3,pc2,service,pc1",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c7",
  "file": "conjectures/mypyvy/ticket-c7.fol",
  "quantifiers": 1,
  "max_quantifier_depth": 1,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. (~((pc2(T) | pc3(T))) | next_ticket ~= zero)",
  "extra": [
   "--blocked-symbols=le,m,service,pc1",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c8",
  "file": "conjectures/mypyvy/ticket-c8.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T1:thread. forall M:ticket. forall T2:thread. (~((m(T1, M) & m(T2, M) & M ~= zero)) | T1 = T2)",
  "extra": [
   "--blocked-symbols=pc1,next_ticket,pc2,service,pc3,le",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "c9",
  "file": "conjectures/mypyvy/ticket-c9.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T:thread. forall M:ticket. (~((pc2(T) & m(T, M))) | le(service, M))",
  "extra": [
   "--blocked-symbols=next_ticket,pc3,zero,pc1",
   "--logic=universal"
  ]
 },
 {
  "base": "ticket",
  "conjecture": "mutex",
  "file": "conjectures/mypyvy/ticket-mutex.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall T1:thread. forall T2:thread. (~((pc3(T1) & pc3(T2))) | T1 = T2)",
  "extra": [
   "--blocked-symbols=pc1,next_ticket,pc2,m,zero,service,le",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/toy_consensus_epr-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((decided(V1) & decided(V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=voted,member,vote",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/toy_consensus_epr-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~vote(N, V) | voted(N))",
  "extra": [
   "--blocked-symbols=member,decided",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/toy_consensus_epr-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((vote(N, V1) & vote(N, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=decided,member,voted",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_epr",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/toy_consensus_epr-c3.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 1,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. (~decided(V) | exists Q:quorum. forall N:node. (~member(N, Q) | vote(N, V)))",
  "extra": [
   "--blocked-symbols=voted"
  ]
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c0",
  "file": "conjectures/mypyvy/toy_consensus_forall-c0.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V1:value. forall V2:value. (~((decided(V1) & decided(V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=voted,voting_quorum,vote,member",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c1",
  "file": "conjectures/mypyvy/toy_consensus_forall-c1.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V:value. (~vote(N, V) | voted(N))",
  "extra": [
   "--blocked-symbols=decided,member,voting_quorum",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c2",
  "file": "conjectures/mypyvy/toy_consensus_forall-c2.fol",
  "quantifiers": 3,
  "max_quantifier_depth": 3,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall N:node. forall V1:value. forall V2:value. (~((vote(N, V1) & vote(N, V2))) | V1 = V2)",
  "extra": [
   "--blocked-symbols=voted,decided,member,voting_quorum",
   "--logic=universal"
  ]
 },
 {
  "base": "toy_consensus_forall",
  "conjecture": "c3",
  "file": "conjectures/mypyvy/toy_consensus_forall-c3.fol",
  "quantifiers": 2,
  "max_quantifier_depth": 2,
  "existentials": 0,
  "max_term_depth": 0,
  "golden_formula": "forall V:value. forall N:node. (~((decided(V) & member(N, voting_quorum))) | vote(N, V))",
  "extra": [
   "--blocked-symbols=voted",
   "--logic=universal"
  ]
 }
]